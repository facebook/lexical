/**
 * Flowtype definitions for LexicalTableCellNode
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.20.0
 * @flow
 */

import type {
  DOMConversionMap,
  DOMConversionOutput,
  DOMExportOutput,
  EditorConfig,
  LexicalEditor,
  LexicalNode,
  NodeKey,
  SerializedGridCellNode,
  Spread,
} from "lexical";
import { GridCellNode } from "lexical";
declare export var TableCellHeaderStates: {|
  BOTH: number,
  COLUMN: number,
  NO_STATUS: number,
  ROW: number,
|};
export type TableCellHeaderState = $ElementType<
  typeof TableCellHeaderStates,
  $Keys<typeof TableCellHeaderStates>
>;
export type SerializedTableCellNode = Spread<
  {|
    headerState: TableCellHeaderState,
    type: "tablecell",
    width: number,
  |},
  SerializedGridCellNode
>;
declare export class TableCellNode mixins GridCellNode {
  __headerState: TableCellHeaderState;
  __width: number;
  static getType(): "tablecell";
  static clone(node: TableCellNode): TableCellNode;
  static importDOM(): DOMConversionMap | null;
  static importJSON(serializedNode: SerializedTableCellNode): TableCellNode;
  constructor(
    headerState?: number,
    colSpan?: number,
    width?: number,
    key?: NodeKey
  ): this;
  createDOM(config: EditorConfig): HTMLElement;
  exportDOM(editor: LexicalEditor): DOMExportOutput;
  exportJSON(): SerializedTableCellNode;
  getTag(): string;
  setHeaderStyles(headerState: TableCellHeaderState): TableCellHeaderState;
  getHeaderStyles(): TableCellHeaderState;
  setWidth(width: number): number;
  getWidth(): number;
  toggleHeaderStyle(headerStateToToggle: TableCellHeaderState): TableCellNode;
  hasHeaderState(headerState: TableCellHeaderState): boolean;
  hasHeader(): boolean;
  updateDOM(prevNode: TableCellNode): boolean;
  collapseAtStart(): true;
  canBeEmpty(): false;
  canIndent(): false;
}
declare export function convertTableCellNodeElement(
  domNode: Node
): DOMConversionOutput;
declare export function $createTableCellNode(
  headerState: TableCellHeaderState,
  colSpan?: number,
  width?: number
): TableCellNode;
declare export function $isTableCellNode(
  node: LexicalNode | null | void
): boolean;
