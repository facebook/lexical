{"version":3,"sources":["../../src/utils/utils.ts"],"names":["ProxyAgent","require","existsAsync","path","Promise","resolve","fs","stat","err","httpRequest","params","onResponse","onError","parsedUrl","URL","parse","url","options","method","headers","proxyURL","startsWith","proxy","href","host","hostname","port","parsedProxyURL","secureProxy","protocol","agent","rejectUnauthorized","requestCallback","res","statusCode","location","request","https","http","on","timeout","undefined","rejectOnTimeout","Error","abort","setTimeout","end","data","fetchData","reject","response","error","body","chunk","downloadFile","destinationPath","progressCallback","log","fulfill","downloadedBytes","totalBytes","promise","x","resume","file","createWriteStream","pipe","parseInt","onData","length","download","destination","progressBarName","retryCount","attempt","getDownloadProgress","errorMessage","message","includes","millis","Math","random","pow","c","progressBar","lastDownloadedBytes","process","stderr","isTTY","ProgressBar","toMegabytes","complete","incomplete","width","total","delta","tick","bytes","mb","round","spawnAsync","cmd","args","stdout","code","makeWaitForNextTask","versions","electron","callback","node","setImmediate","spinning","callbacks","loop","shift","push","assert","value","debugAssert","isUnderTest","isString","obj","String","isRegExp","RegExp","Object","prototype","toString","call","isObject","isError","__proto__","name","debugEnv","getFromENV","debugMode","_isUnderTest","setUnderTest","env","toLowerCase","getAsBooleanFromENV","mkdirIfNeeded","filePath","promises","mkdir","dirname","recursive","catch","headersObjectToArray","separator","setCookieSeparator","result","values","sep","split","trim","headersArrayToObject","lowerCase","monotonicTime","seconds","nanoseconds","hrtime","HashStream","stream","Writable","_hash","crypto","createHash","_write","encoding","done","update","digest","objectToArray","map","entries","arrayToObject","array","calculateFileSha1","filename","hashStream","createReadStream","f","r","calculateSha1","buffer","hash","createGuid","randomBytes","removeFolders","dirs","all","dir","maxBusyTries","canAccessFile","accessSync","e","getUserAgent","getPlaywrightVersion","os","arch","platform","release","majorMinorOnly","packageJson","version","slice","join","constructURLBasedOnBaseURL","baseURL","givenURL","hostPlatform","ver","a","macVersion","LAST_STABLE_MAC_MAJOR_VERSION","min","cpus","some","cpu","model","ubuntuVersion","archSuffix","wrapInASCIIBox","text","padding","lines","maxLength","max","line","repeat","isFilePayload","streamToString","chunks","Buffer","from","concat"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport path from 'path';\nimport fs from 'fs';\nimport stream from 'stream';\nimport removeFolder from 'rimraf';\nimport * as crypto from 'crypto';\nimport os from 'os';\nimport http from 'http';\nimport https from 'https';\nimport { spawn, SpawnOptions } from 'child_process';\nimport { getProxyForUrl } from 'proxy-from-env';\nimport * as URL from 'url';\nimport { getUbuntuVersionSync } from './ubuntuVersion';\nimport { NameValue } from '../protocol/channels';\nimport ProgressBar from 'progress';\n\n// `https-proxy-agent` v5 is written in TypeScript and exposes generated types.\n// However, as of June 2020, its types are generated with tsconfig that enables\n// `esModuleInterop` option.\n//\n// As a result, we can't depend on the package unless we enable the option\n// for our codebase. Instead of doing this, we abuse \"require\" to import module\n// without types.\nconst ProxyAgent = require('https-proxy-agent');\n\nexport const existsAsync = (path: string): Promise<boolean> => new Promise(resolve => fs.stat(path, err => resolve(!err)));\n\ntype HTTPRequestParams = {\n  url: string,\n  method?: string,\n  headers?: http.OutgoingHttpHeaders,\n  data?: string | Buffer,\n  timeout?: number,\n};\n\nfunction httpRequest(params: HTTPRequestParams, onResponse: (r: http.IncomingMessage) => void, onError: (error: Error) => void) {\n  const parsedUrl = URL.parse(params.url);\n  let options: https.RequestOptions = { ...parsedUrl };\n  options.method = params.method || 'GET';\n  options.headers = params.headers;\n\n  const proxyURL = getProxyForUrl(params.url);\n  if (proxyURL) {\n    if (params.url.startsWith('http:')) {\n      const proxy = URL.parse(proxyURL);\n      options = {\n        path: parsedUrl.href,\n        host: proxy.hostname,\n        port: proxy.port,\n      };\n    } else {\n      const parsedProxyURL = URL.parse(proxyURL);\n      (parsedProxyURL as any).secureProxy = parsedProxyURL.protocol === 'https:';\n\n      options.agent = new ProxyAgent(parsedProxyURL);\n      options.rejectUnauthorized = false;\n    }\n  }\n\n  const requestCallback = (res: http.IncomingMessage) => {\n    const statusCode = res.statusCode || 0;\n    if (statusCode >= 300 && statusCode < 400 && res.headers.location)\n      httpRequest({ ...params, url: res.headers.location }, onResponse, onError);\n    else\n      onResponse(res);\n  };\n  const request = options.protocol === 'https:' ?\n    https.request(options, requestCallback) :\n    http.request(options, requestCallback);\n  request.on('error', onError);\n  if (params.timeout !== undefined) {\n    const rejectOnTimeout = () =>  {\n      onError(new Error(`Request to ${params.url} timed out after ${params.timeout}ms`));\n      request.abort();\n    };\n    if (params.timeout <= 0) {\n      rejectOnTimeout();\n      return;\n    }\n    request.setTimeout(params.timeout, rejectOnTimeout);\n  }\n  request.end(params.data);\n}\n\nexport function fetchData(params: HTTPRequestParams, onError?: (response: http.IncomingMessage) => Promise<Error>): Promise<string> {\n  return new Promise((resolve, reject) => {\n    httpRequest(params, async response => {\n      if (response.statusCode !== 200) {\n        const error = onError ? await onError(response) : new Error(`fetch failed: server returned code ${response.statusCode}. URL: ${params.url}`);\n        reject(error);\n        return;\n      }\n      let body = '';\n      response.on('data', (chunk: string) => body += chunk);\n      response.on('error', (error: any) => reject(error));\n      response.on('end', () => resolve(body));\n    }, reject);\n  });\n}\n\ntype OnProgressCallback = (downloadedBytes: number, totalBytes: number) => void;\ntype DownloadFileLogger = (message: string) => void;\n\nfunction downloadFile(url: string, destinationPath: string, options: {progressCallback?: OnProgressCallback, log?: DownloadFileLogger} = {}): Promise<{error: any}> {\n  const {\n    progressCallback,\n    log = () => {},\n  } = options;\n  log(`running download:`);\n  log(`-- from url: ${url}`);\n  log(`-- to location: ${destinationPath}`);\n  let fulfill: ({ error }: {error: any}) => void = ({ error }) => {};\n  let downloadedBytes = 0;\n  let totalBytes = 0;\n\n  const promise: Promise<{error: any}> = new Promise(x => { fulfill = x; });\n\n  httpRequest({ url }, response => {\n    log(`-- response status code: ${response.statusCode}`);\n    if (response.statusCode !== 200) {\n      const error = new Error(`Download failed: server returned code ${response.statusCode}. URL: ${url}`);\n      // consume response data to free up memory\n      response.resume();\n      fulfill({ error });\n      return;\n    }\n    const file = fs.createWriteStream(destinationPath);\n    file.on('finish', () => fulfill({ error: null }));\n    file.on('error', error => fulfill({ error }));\n    response.pipe(file);\n    totalBytes = parseInt(response.headers['content-length'] || '0', 10);\n    log(`-- total bytes: ${totalBytes}`);\n    if (progressCallback)\n      response.on('data', onData);\n  }, (error: any) => fulfill({ error }));\n  return promise;\n\n  function onData(chunk: string) {\n    downloadedBytes += chunk.length;\n    progressCallback!(downloadedBytes, totalBytes);\n  }\n}\n\nexport async function download(\n  url: string,\n  destination: string,\n  options: {\n\t\tprogressBarName?: string,\n\t\tretryCount?: number\n    log?: DownloadFileLogger\n\t} = {}\n) {\n  const { progressBarName = 'file', retryCount = 3, log = () => {} } = options;\n  for (let attempt = 1; attempt <= retryCount; ++attempt) {\n    log(\n        `downloading ${progressBarName} - attempt #${attempt}`\n    );\n    const { error } = await downloadFile(url, destination, {\n      progressCallback: getDownloadProgress(progressBarName),\n      log,\n    });\n    if (!error) {\n      log(`SUCCESS downloading ${progressBarName}`);\n      break;\n    }\n    const errorMessage = error?.message || '';\n    log(`attempt #${attempt} - ERROR: ${errorMessage}`);\n    if (\n      attempt < retryCount &&\n      (errorMessage.includes('ECONNRESET') ||\n        errorMessage.includes('ETIMEDOUT'))\n    ) {\n      // Maximum default delay is 3rd retry: 1337.5ms\n      const millis = Math.random() * 200 + 250 * Math.pow(1.5, attempt);\n      log(`sleeping ${millis}ms before retry...`);\n      await new Promise(c => setTimeout(c, millis));\n    } else {\n      throw error;\n    }\n  }\n}\n\nfunction getDownloadProgress(progressBarName: string): OnProgressCallback {\n  let progressBar: ProgressBar;\n  let lastDownloadedBytes = 0;\n\n  return (downloadedBytes: number, totalBytes: number) => {\n    if (!process.stderr.isTTY)\n      return;\n    if (!progressBar) {\n      progressBar = new ProgressBar(\n          `Downloading ${progressBarName} - ${toMegabytes(\n              totalBytes\n          )} [:bar] :percent :etas `,\n          {\n            complete: '=',\n            incomplete: ' ',\n            width: 20,\n            total: totalBytes,\n          }\n      );\n    }\n    const delta = downloadedBytes - lastDownloadedBytes;\n    lastDownloadedBytes = downloadedBytes;\n    progressBar.tick(delta);\n  };\n}\n\nfunction toMegabytes(bytes: number) {\n  const mb = bytes / 1024 / 1024;\n  return `${Math.round(mb * 10) / 10} Mb`;\n}\n\nexport function spawnAsync(cmd: string, args: string[], options: SpawnOptions = {}): Promise<{stdout: string, stderr: string, code: number | null, error?: Error}> {\n  const process = spawn(cmd, args, options);\n\n  return new Promise(resolve => {\n    let stdout = '';\n    let stderr = '';\n    if (process.stdout)\n      process.stdout.on('data', data => stdout += data);\n    if (process.stderr)\n      process.stderr.on('data', data => stderr += data);\n    process.on('close', code => resolve({ stdout, stderr, code }));\n    process.on('error', error => resolve({ stdout, stderr, code: 0, error }));\n  });\n}\n\n// See https://joel.tools/microtasks/\nexport function makeWaitForNextTask() {\n  // As of Mar 2021, Electorn v12 doesn't create new task with `setImmediate` despite\n  // using Node 14 internally, so we fallback to `setTimeout(0)` instead.\n  // @see https://github.com/electron/electron/issues/28261\n  if ((process.versions as any).electron)\n    return (callback: () => void) => setTimeout(callback, 0);\n  if (parseInt(process.versions.node, 10) >= 11)\n    return setImmediate;\n\n  // Unlike Node 11, Node 10 and less have a bug with Task and MicroTask execution order:\n  // - https://github.com/nodejs/node/issues/22257\n  //\n  // So we can't simply run setImmediate to dispatch code in a following task.\n  // However, we can run setImmediate from-inside setImmediate to make sure we're getting\n  // in the following task.\n\n  let spinning = false;\n  const callbacks: (() => void)[] = [];\n  const loop = () => {\n    const callback = callbacks.shift();\n    if (!callback) {\n      spinning = false;\n      return;\n    }\n    setImmediate(loop);\n    // Make sure to call callback() as the last thing since it's\n    // untrusted code that might throw.\n    callback();\n  };\n\n  return (callback: () => void) => {\n    callbacks.push(callback);\n    if (!spinning) {\n      spinning = true;\n      setImmediate(loop);\n    }\n  };\n}\n\nexport function assert(value: any, message?: string): asserts value {\n  if (!value)\n    throw new Error(message || 'Assertion error');\n}\n\nexport function debugAssert(value: any, message?: string): asserts value {\n  if (isUnderTest() && !value)\n    throw new Error(message);\n}\n\nexport function isString(obj: any): obj is string {\n  return typeof obj === 'string' || obj instanceof String;\n}\n\nexport function isRegExp(obj: any): obj is RegExp {\n  return obj instanceof RegExp || Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nexport function isObject(obj: any): obj is NonNullable<object> {\n  return typeof obj === 'object' && obj !== null;\n}\n\nexport function isError(obj: any): obj is Error {\n  return obj instanceof Error || (obj && obj.__proto__ && obj.__proto__.name === 'Error');\n}\n\nconst debugEnv = getFromENV('PWDEBUG') || '';\nexport function debugMode() {\n  if (debugEnv === 'console')\n    return 'console';\n  return debugEnv ? 'inspector' : '';\n}\n\nlet _isUnderTest = false;\nexport function setUnderTest() {\n  _isUnderTest = true;\n}\nexport function isUnderTest(): boolean {\n  return _isUnderTest;\n}\n\nexport function getFromENV(name: string): string | undefined {\n  let value = process.env[name];\n  value = value === undefined ? process.env[`npm_config_${name.toLowerCase()}`] : value;\n  value = value === undefined ?  process.env[`npm_package_config_${name.toLowerCase()}`] : value;\n  return value;\n}\n\nexport function getAsBooleanFromENV(name: string): boolean {\n  const value = getFromENV(name);\n  return !!value && value !== 'false' && value !== '0';\n}\n\nexport async function mkdirIfNeeded(filePath: string) {\n  // This will harmlessly throw on windows if the dirname is the root directory.\n  await fs.promises.mkdir(path.dirname(filePath), { recursive: true }).catch(() => {});\n}\n\ntype HeadersArray = { name: string, value: string }[];\ntype HeadersObject = { [key: string]: string };\n\nexport function headersObjectToArray(headers: HeadersObject, separator?: string, setCookieSeparator?: string): HeadersArray {\n  if (!setCookieSeparator)\n    setCookieSeparator = separator;\n  const result: HeadersArray = [];\n  for (const name in headers) {\n    const values = headers[name];\n    if (separator) {\n      const sep = name.toLowerCase() === 'set-cookie' ? setCookieSeparator : separator;\n      for (const value of values.split(sep!))\n        result.push({ name, value: value.trim() });\n    } else {\n      result.push({ name, value: values });\n    }\n  }\n  return result;\n}\n\nexport function headersArrayToObject(headers: HeadersArray, lowerCase: boolean): HeadersObject {\n  const result: HeadersObject = {};\n  for (const { name, value } of headers)\n    result[lowerCase ? name.toLowerCase() : name] = value;\n  return result;\n}\n\nexport function monotonicTime(): number {\n  const [seconds, nanoseconds] = process.hrtime();\n  return seconds * 1000 + (nanoseconds / 1000 | 0) / 1000;\n}\n\nclass HashStream extends stream.Writable {\n  private _hash = crypto.createHash('sha1');\n\n  override _write(chunk: Buffer, encoding: string, done: () => void) {\n    this._hash.update(chunk);\n    done();\n  }\n\n  digest(): string {\n    return this._hash.digest('hex');\n  }\n}\n\nexport function objectToArray(map?:  { [key: string]: any }): NameValue[] | undefined {\n  if (!map)\n    return undefined;\n  const result = [];\n  for (const [name, value] of Object.entries(map))\n    result.push({ name, value: String(value) });\n  return result;\n}\n\nexport function arrayToObject(array?: NameValue[]): { [key: string]: string } | undefined {\n  if (!array)\n    return undefined;\n  const result: { [key: string]: string } = {};\n  for (const { name, value } of array)\n    result[name] = value;\n  return result;\n}\n\nexport async function calculateFileSha1(filename: string): Promise<string> {\n  const hashStream = new HashStream();\n  const stream = fs.createReadStream(filename);\n  stream.on('open', () => stream.pipe(hashStream));\n  await new Promise((f, r) => {\n    hashStream.on('finish', f);\n    hashStream.on('error', r);\n  });\n  return hashStream.digest();\n}\n\nexport function calculateSha1(buffer: Buffer | string): string {\n  const hash = crypto.createHash('sha1');\n  hash.update(buffer);\n  return hash.digest('hex');\n}\n\nexport function createGuid(): string {\n  return crypto.randomBytes(16).toString('hex');\n}\n\nexport async function removeFolders(dirs: string[]): Promise<Array<Error|null|undefined>> {\n  return await Promise.all(dirs.map((dir: string) => {\n    return new Promise<Error|null|undefined>(fulfill => {\n      removeFolder(dir, { maxBusyTries: 10 }, error => {\n        fulfill(error ?? undefined);\n      });\n    });\n  }));\n}\n\nexport function canAccessFile(file: string) {\n  if (!file)\n    return false;\n\n  try {\n    fs.accessSync(file);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nexport function getUserAgent() {\n  return `Playwright/${getPlaywrightVersion()} (${os.arch()}/${os.platform()}/${os.release()})`;\n}\n\nexport function getPlaywrightVersion(majorMinorOnly = false) {\n  const packageJson = require('./../../package.json');\n  return majorMinorOnly ? packageJson.version.split('.').slice(0, 2).join('.') : packageJson.version;\n}\n\nexport function constructURLBasedOnBaseURL(baseURL: string | undefined, givenURL: string): string {\n  try {\n    return (new URL.URL(givenURL, baseURL)).toString();\n  } catch (e) {\n    return givenURL;\n  }\n}\n\nexport type HostPlatform = 'win64'|'mac10.13'|'mac10.14'|'mac10.15'|'mac11'|'mac11-arm64'|'ubuntu18.04'|'ubuntu20.04'|'ubuntu18.04-arm64'|'ubuntu20.04-arm64';\nexport const hostPlatform = ((): HostPlatform => {\n  const platform = os.platform();\n  if (platform === 'darwin') {\n    const ver = os.release().split('.').map((a: string) => parseInt(a, 10));\n    let macVersion = '';\n    if (ver[0] < 18) {\n      // Everything before 10.14 is considered 10.13.\n      macVersion = 'mac10.13';\n    } else if (ver[0] === 18) {\n      macVersion = 'mac10.14';\n    } else if (ver[0] === 19) {\n      macVersion = 'mac10.15';\n    } else {\n      // ver[0] >= 20\n      const LAST_STABLE_MAC_MAJOR_VERSION = 11;\n      // Best-effort support for MacOS beta versions.\n      macVersion = 'mac' + Math.min(ver[0] - 9, LAST_STABLE_MAC_MAJOR_VERSION);\n      // BigSur is the first version that might run on Apple Silicon.\n      if (os.cpus().some(cpu => cpu.model.includes('Apple')))\n        macVersion += '-arm64';\n    }\n    return macVersion as HostPlatform;\n  }\n  if (platform === 'linux') {\n    const ubuntuVersion = getUbuntuVersionSync();\n    const archSuffix = os.arch() === 'arm64' ? '-arm64' : '';\n    if (parseInt(ubuntuVersion, 10) <= 19)\n      return ('ubuntu18.04' + archSuffix) as HostPlatform;\n    return ('ubuntu20.04' + archSuffix) as HostPlatform;\n  }\n  if (platform === 'win32')\n    return 'win64';\n  return platform as HostPlatform;\n})();\n\nexport function wrapInASCIIBox(text: string, padding = 0): string {\n  const lines = text.split('\\n');\n  const maxLength = Math.max(...lines.map(line => line.length));\n  return [\n    '╔' + '═'.repeat(maxLength + padding * 2) + '╗',\n    ...lines.map(line => '║' + ' '.repeat(padding) + line + ' '.repeat(maxLength - line.length + padding) + '║'),\n    '╚' + '═'.repeat(maxLength + padding * 2) + '╝',\n  ].join('\\n');\n}\n\nexport function isFilePayload(value: any): boolean {\n  return typeof value === 'object' && value['name'] && value['mimeType'] && value['buffer'];\n}\n\nexport function streamToString(stream: stream.Readable): Promise<string> {\n  return new Promise<string>((resolve, reject) => {\n    const chunks: Buffer[] = [];\n    stream.on('data', chunk => chunks.push(Buffer.from(chunk)));\n    stream.on('error', reject);\n    stream.on('end', () => resolve(Buffer.concat(chunks).toString('utf8')));\n  });\n}\n"],"file":"utils.js"}