/**
 * Flowtype definitions for LexicalTableRowNode
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.20.0
 * @flow
 */

import type { Spread } from "lexical";
import {
  DOMConversionMap,
  DOMConversionOutput,
  EditorConfig,
  GridRowNode,
  LexicalNode,
  NodeKey,
  SerializedElementNode,
} from "lexical";
export type SerializedTableRowNode = Spread<
  {|
    height: number,
    type: "tablerow",
    version: 1,
  |},
  SerializedElementNode
>;
declare export class TableRowNode mixins GridRowNode {
  __height: number;
  static getType(): "tablerow";
  static clone(node: TableRowNode): TableRowNode;
  static importDOM(): DOMConversionMap | null;
  static importJSON(serializedNode: SerializedTableRowNode): TableRowNode;
  constructor(height?: number, key?: NodeKey): this;
  exportJSON(): SerializedElementNode;
  createDOM(config: EditorConfig): HTMLElement;
  setHeight(height: number): number;
  getHeight(): number;
  updateDOM(prevNode: TableRowNode): boolean;
  canBeEmpty(): false;
  canIndent(): false;
}
declare export function convertTableRowElement(
  domNode: Node
): DOMConversionOutput;
declare export function $createTableRowNode(height?: number): TableRowNode;
declare export function $isTableRowNode(
  node: LexicalNode | null | void
): boolean;
