{"version":3,"sources":["../../src/utils/multimap.ts"],"names":["MultiMap","constructor","_map","Map","set","key","value","values","get","push","has","hasValue","includes","size","keys","result","clear"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEO,MAAMA,QAAN,CAAqB;AAG1BC,EAAAA,WAAW,GAAG;AAAA,SAFNC,IAEM;AACZ,SAAKA,IAAL,GAAY,IAAIC,GAAJ,EAAZ;AACD;;AAEDC,EAAAA,GAAG,CAACC,GAAD,EAASC,KAAT,EAAmB;AACpB,QAAIC,MAAM,GAAG,KAAKL,IAAL,CAAUM,GAAV,CAAcH,GAAd,CAAb;;AACA,QAAI,CAACE,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,EAAT;;AACA,WAAKL,IAAL,CAAUE,GAAV,CAAcC,GAAd,EAAmBE,MAAnB;AACD;;AACDA,IAAAA,MAAM,CAACE,IAAP,CAAYH,KAAZ;AACD;;AAEDE,EAAAA,GAAG,CAACH,GAAD,EAAc;AACf,WAAO,KAAKH,IAAL,CAAUM,GAAV,CAAcH,GAAd,KAAsB,EAA7B;AACD;;AAEDK,EAAAA,GAAG,CAACL,GAAD,EAAkB;AACnB,WAAO,KAAKH,IAAL,CAAUQ,GAAV,CAAcL,GAAd,CAAP;AACD;;AAEDM,EAAAA,QAAQ,CAACN,GAAD,EAASC,KAAT,EAA4B;AAClC,UAAMC,MAAM,GAAG,KAAKL,IAAL,CAAUM,GAAV,CAAcH,GAAd,CAAf;;AACA,QAAI,CAACE,MAAL,EACE,OAAO,KAAP;AACF,WAAOA,MAAM,CAACK,QAAP,CAAgBN,KAAhB,CAAP;AACD;;AAEO,MAAJO,IAAI,GAAW;AACjB,WAAO,KAAKX,IAAL,CAAUW,IAAjB;AACD;;AAEDC,EAAAA,IAAI,GAAwB;AAC1B,WAAO,KAAKZ,IAAL,CAAUY,IAAV,EAAP;AACD;;AAEDP,EAAAA,MAAM,GAAgB;AACpB,UAAMQ,MAAW,GAAG,EAApB;;AACA,SAAK,MAAMV,GAAX,IAAkB,KAAKS,IAAL,EAAlB,EACEC,MAAM,CAACN,IAAP,CAAY,GAAG,KAAKD,GAAL,CAASH,GAAT,CAAf;;AACF,WAAOU,MAAP;AACD;;AAEDC,EAAAA,KAAK,GAAG;AACN,SAAKd,IAAL,CAAUc,KAAV;AACD;;AAhDyB","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class MultiMap<K, V> {\n  private _map: Map<K, V[]>;\n\n  constructor() {\n    this._map = new Map<K, V[]>();\n  }\n\n  set(key: K, value: V) {\n    let values = this._map.get(key);\n    if (!values) {\n      values = [];\n      this._map.set(key, values);\n    }\n    values.push(value);\n  }\n\n  get(key: K): V[] {\n    return this._map.get(key) || [];\n  }\n\n  has(key: K): boolean {\n    return this._map.has(key);\n  }\n\n  hasValue(key: K, value: V): boolean {\n    const values = this._map.get(key);\n    if (!values)\n      return false;\n    return values.includes(value);\n  }\n\n  get size(): number {\n    return this._map.size;\n  }\n\n  keys(): IterableIterator<K> {\n    return this._map.keys();\n  }\n\n  values(): Iterable<V> {\n    const result: V[] = [];\n    for (const key of this.keys())\n      result.push(...this.get(key));\n    return result;\n  }\n\n  clear() {\n    this._map.clear();\n  }\n}\n"],"file":"multimap.js"}