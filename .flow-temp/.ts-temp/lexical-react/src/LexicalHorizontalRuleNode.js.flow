/**
 * Flowtype definitions for LexicalHorizontalRuleNode
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.20.0
 * @flow
 */

import type {
  LexicalCommand,
  LexicalNode,
  SerializedLexicalNode,
} from "lexical";
import { DecoratorNode } from "lexical";
export type SerializedHorizontalRuleNode = {|
  ...SerializedLexicalNode,
  ...{|
    type: "horizontalrule",
    version: 1,
  |},
|};
declare export var INSERT_HORIZONTAL_RULE_COMMAND: LexicalCommand<void>;
declare export class HorizontalRuleNode mixins DecoratorNode<React$Node> {
  static getType(): string;
  static clone(node: HorizontalRuleNode): HorizontalRuleNode;
  static importJSON(
    serializedNode: SerializedHorizontalRuleNode
  ): HorizontalRuleNode;
  exportJSON(): SerializedLexicalNode;
  createDOM(): HTMLElement;
  getTextContent(): "\n";
  isTopLevel(): true;
  updateDOM(): false;
  decorate(): React$Node;
}
declare export function $createHorizontalRuleNode(): HorizontalRuleNode;
declare export function $isHorizontalRuleNode(
  node: LexicalNode | null | void
): boolean;
