/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
'use strict';var p=require("@lexical/react/LexicalComposerContext"),u=require("react"),v=require("@lexical/overflow"),z=require("@lexical/text"),A=require("@lexical/utils"),C=require("lexical");
function D(b){let c=new URLSearchParams;c.append("code",b);for(let k=1;k<arguments.length;k++)c.append("v",arguments[k]);throw Error(`Minified Lexical error #${b}; visit https://lexical.dev/docs/error?${c} for the full message or `+"use the non-minified dev environment for full errors and additional helpful warnings.");}
function F(b,c,k=Object.freeze({})){let {strlen:e=m=>m.length,remainingCharacters:q=()=>{}}=k;u.useEffect(()=>{b.hasNodes([v.OverflowNode])||D(57)},[b]);u.useEffect(()=>{let m=b.getEditorState().read(z.$rootTextContent),d=0;return A.mergeRegister(b.registerTextContentListener(f=>{m=f}),b.registerUpdateListener(({dirtyLeaves:f,dirtyElements:J})=>{var w=b.isComposing();f=0<f.size||0<J.size;if(!w&&f){w=e(m);f=w>c||null!==d&&d>c;q(c-w);if(null===d||f){let r=G(m,c,e);b.update(()=>{let B=A.$dfs(),L=B.length,
x=0;for(let y=0;y<L;y+=1){var {node:a}=B[y];if(v.$isOverflowNode(a)){var g=x;if(x+a.getTextContentSize()<=r){var h=a.getParent();g=a.getPreviousSibling();var l=a.getNextSibling();H(a);a=C.$getSelection();!C.$isRangeSelection(a)||a.anchor.getNode().isAttached()&&a.focus.getNode().isAttached()||(C.$isTextNode(g)?g.select():C.$isTextNode(l)?l.select():null!==h&&h.select())}else g<r&&(h=a.getFirstDescendant(),l=null!==h?h.getTextContentSize():0,g+=l,h=C.$isTextNode(h)&&h.isSimpleText(),g=g<=r,(h||g)&&
H(a))}else if(C.$isLeafNode(a)&&(g=x,x+=a.getTextContentSize(),x>r&&!v.$isOverflowNode(a.getParent())&&(h=C.$getSelection(),g<r&&C.$isTextNode(a)&&a.isSimpleText()?([,a]=a.splitText(r-g),a=I(a)):a=I(a),null!==h&&C.$setSelection(h),g=a.getPreviousSibling(),v.$isOverflowNode(g)))){l=a.getFirstChild();var t=g.getChildren();h=t.length;if(null===l)a.append(...t);else for(var n=0;n<h;n++)l.insertBefore(t[n]);n=C.$getSelection();if(C.$isRangeSelection(n)){l=n.anchor;t=l.getNode();n=n.focus;let E=l.getNode();
t.is(g)?l.set(a.getKey(),l.offset,"element"):t.is(a)&&l.set(a.getKey(),h+l.offset,"element");E.is(g)?n.set(a.getKey(),n.offset,"element"):E.is(a)&&n.set(a.getKey(),h+n.offset,"element")}g.remove()}}},{tag:"history-merge"})}d=w}}))},[b,c,q,e])}
function G(b,c,k){var e=Intl.Segmenter;let q=0;var m=0;if("function"===typeof e){b=(new e).segment(b);for(var {segment:d}of b){m+=k(d);if(m>c)break;q+=d.length}}else for(d=Array.from(b),b=d.length,e=0;e<b;e++){let f=d[e];m+=k(f);if(m>c)break;q+=f.length}return q}function I(b){let c=v.$createOverflowNode();b.insertBefore(c);c.append(b);return c}function H(b){let c=b.getChildren(),k=c.length;for(let e=0;e<k;e++)b.insertBefore(c[e]);b.remove();return 0<k?c[k-1]:null}let K=null;
exports.CharacterLimitPlugin=function({charset:b="UTF-16",maxLength:c=5}){let [k]=p.useLexicalComposerContext(),[e,q]=u.useState(c),m=u.useMemo(()=>({remainingCharacters:q,strlen:d=>{if("UTF-8"===b){if(void 0===window.TextEncoder)var f=null;else null===K&&(K=new window.TextEncoder),f=K;null===f?(f=encodeURIComponent(d).match(/%[89ABab]/g),d=d.length+(f?f.length:0)):d=f.encode(d).length;return d}if("UTF-16"===b)return d.length;throw Error("Unrecognized charset");}}),[b]);F(k,c,m);return u.createElement("span",
{className:`characters-limit ${0>e?"characters-limit-exceeded":""}`},e)}
