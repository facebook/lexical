name: Lexical Tests

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'packages/lexical-website/**'
  pull_request:
    types: [opened, synchronize, reopened]
    paths-ignore:
      - 'packages/lexical-website/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  integrity:
    if: github.repository_owner == 'facebook'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.11.0]
    env:
      CI: true
      GITHUB_TOKEN: ${{ secrets.DANGER_GITHUB_API_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - name: Install dependencies
        run: npm ci
      - run: npm run ci-check
      - run: npm run build
      - run: npm run build-www

  unit:
    if: github.repository_owner == 'facebook'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.18.0]
    env:
      CI: true
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - name: Install dependencies
        run: npm ci
      - run: npm run test-unit

  integration:
    if: github.repository_owner == 'facebook'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.18.0]
    env:
      CI: true
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - name: Install dependencies
        run: npm ci
      - run: npm run test-integration

  e2e:
    if: github.repository_owner == 'facebook'
    strategy:
      matrix:
        os: ['macos-latest', 'ubuntu-latest', 'windows-latest']
        node-version: [18.18.0]
        browser: ['chromium', 'firefox']
        editor-mode: ['rich-text', 'plain-text']
        events-mode: ['legacy-events', 'modern-events']
        test-prefix: ['test-e2e-']
        include:
          - browser: chromium
            events-mode: modern-events
            os: macos-latest
            test-prefix: test-e2e-prod
          - events-mode: modern-events
            editor-mode: rich-text-with-collab
          - os: macos-latest
            playwright-cache: |
              ~/Library/Caches/ms-playwright
            test-results: |
              test-results/
            browser: webkit
          - os: windows-latest
            playwright-cache: |
              C:\Users\runneradmin\AppData\Local\ms-playwright
            test-results: |
              ~/.npm/_logs/
          - os: ubuntu-latest
            playwright-cache: |
              ~/.cache/ms-playwright
            test-results: |
              test-results/
    runs-on: ${{ matrix.os }}
    env:
      CI: true
      E2E_EDITOR_MODE: ${{ matrix.editor-mode }}
      E2E_EVENTS_MODE: ${{ matrix.events-mode }}
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - name: Install required ubuntu-latest packages
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install xvfb
      - name: Install dependencies
        run: npm ci
      - name: Restore playwright from cache
        uses: actions/cache/restore@v4
        id: playwright-cache
        with:
          path: ${{ matrix.playwright-cache }}
          key: playwright-${{ matrix.node-version }}-${{ runner.os }}-${{ runner.arch }}-v${{ secrets.CACHE_VERSION }}-${{ hashFiles('package-lock.json') }}
      - name: Install playwright
        run: npx playwright install
      - name: Save playwright to cache
        uses: actions/cache/save@v4
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ matrix.playwright-cache }}
          key: ${{ steps.playwright-cache.outputs.cache-primary-key }}
      - name: Run tests
        run: npm run ${{ matrix.test-prefix }}${{ matrix.editor-mode == 'rich-text-with-collab' && 'collab-' || '' }}ci-${{ matrix.browser }}
      - name: Upload Artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: Test Results
          path: ${{ matrix.test-results }}
          retention-days: 7
