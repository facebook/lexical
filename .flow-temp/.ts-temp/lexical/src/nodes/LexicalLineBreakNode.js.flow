/**
 * Flowtype definitions for LexicalLineBreakNode
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.20.0
 * @flow
 */

import type {
  DOMConversionMap,
  NodeKey,
  SerializedLexicalNode,
} from "../LexicalNode";
import type { Spread } from "lexical";
import { LexicalNode } from "../LexicalNode";
export type SerializedLineBreakNode = Spread<
  {|
    type: "linebreak",
  |},
  SerializedLexicalNode
>;
declare export class LineBreakNode mixins LexicalNode {
  static getType(): string;
  static clone(node: LineBreakNode): LineBreakNode;
  constructor(key?: NodeKey): this;
  getTextContent(): "\n";
  createDOM(): HTMLElement;
  updateDOM(): false;
  static importDOM(): DOMConversionMap | null;
  static importJSON(
    serializedLineBreakNode: SerializedLineBreakNode
  ): LineBreakNode;
  exportJSON(): SerializedLexicalNode;
}
declare export function $createLineBreakNode(): LineBreakNode;
declare export function $isLineBreakNode(
  node: LexicalNode | null | void
): boolean;
