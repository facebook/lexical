/**
 * Flowtype definitions for CollabTextNode
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.20.0
 * @flow
 */

import type { Binding } from ".";
import type { CollabElementNode } from "./CollabElementNode";
import type { NodeKey, NodeMap, TextNode } from "lexical";
import type { Map as YMap } from "yjs";
declare export class CollabTextNode {
  _map: YMap<mixed>;
  _key: NodeKey;
  _parent: CollabElementNode;
  _text: string;
  _type: string;
  _normalized: boolean;
  constructor(
    map: YMap<mixed>,
    text: string,
    parent: CollabElementNode,
    type: string
  ): this;
  getPrevNode(nodeMap: null | NodeMap): null | TextNode;
  getNode(): null | TextNode;
  getSharedType(): YMap<mixed>;
  getType(): string;
  getKey(): NodeKey;
  getSize(): number;
  getOffset(): number;
  spliceText(index: number, delCount: number, newText: string): void;
  syncPropertiesAndTextFromLexical(
    binding: Binding,
    nextLexicalNode: TextNode,
    prevNodeMap: null | NodeMap
  ): void;
  syncPropertiesAndTextFromYjs(
    binding: Binding,
    keysChanged: null | Set<string>
  ): void;
  destroy(binding: Binding): void;
}
declare export function $createCollabTextNode(
  map: YMap<mixed>,
  text: string,
  parent: CollabElementNode,
  type: string
): CollabTextNode;
