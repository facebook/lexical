/**
 * Flowtype definitions for Bindings
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.20.0
 * @flow
 */

import type { Provider } from ".";
import type { CollabDecoratorNode } from "./CollabDecoratorNode";
import type { CollabElementNode } from "./CollabElementNode";
import type { CollabLineBreakNode } from "./CollabLineBreakNode";
import type { CollabTextNode } from "./CollabTextNode";
import type { Cursor } from "./SyncCursors";
import type { LexicalEditor, NodeKey } from "lexical";
import type { Doc } from "yjs";
export type ClientID = number;
export type Binding = {|
  clientID: number,
  collabNodeMap: Map<
    NodeKey,
    | CollabElementNode
    | CollabTextNode
    | CollabDecoratorNode
    | CollabLineBreakNode
  >,
  cursors: Map<ClientID, Cursor>,
  cursorsContainer: null | HTMLElement,
  doc: Doc,
  docMap: Map<string, Doc>,
  editor: LexicalEditor,
  id: string,
  nodeProperties: Map<string, Array<string>>,
  root: CollabElementNode,
|};
declare export function createBinding(
  editor: LexicalEditor,
  provider: Provider,
  id: string,
  doc: Doc | null | void,
  docMap: Map<string, Doc>
): Binding;
