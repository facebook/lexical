/**
 * (c) Meta Platforms, Inc. and affiliates. Confidential and proprietary.
 *
 * @flow strict
 * @format
 */

import type {LexicalEditor, LexicalNode} from 'lexical';
import type {OverflowNode} from '@lexical/overflow';

type OptionalProps = {
  strlen?: (input: string) => number,
  remainingCharacters?: (characters: number) => void,
};
declare export function useCharacterLimit(
  editor: LexicalEditor,
  maxCharacters: number,
  optional: OptionalProps,
): void;
declare function findOffset(
  text: string,
  maxCharacters: number,
  strlen: (input: string) => number,
): number;
declare function $wrapOverflowedNodes(offset: number): void;
declare function $wrapNode(node: LexicalNode): OverflowNode;
declare function $unwrapNode(node: OverflowNode): LexicalNode | null;
declare export function mergePrevious(overflowNode: OverflowNode): void;
