/**
 * Flowtype definitions for SyncEditorStates
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.20.0
 * @flow
 */

import type {
  EditorState,
  IntentionallyMarkedAsDirtyElement,
  NodeKey,
} from "lexical";
import { Text as YText, YEvent } from "yjs";
import { Binding, Provider } from ".";
declare export function syncYjsChangesToLexical(
  binding: Binding,
  provider: Provider,
  events: Array<YEvent<YText>>
): void;
declare export function syncLexicalUpdateToYjs(
  binding: Binding,
  provider: Provider,
  prevEditorState: EditorState,
  currEditorState: EditorState,
  dirtyElements: Map<NodeKey, IntentionallyMarkedAsDirtyElement>,
  dirtyLeaves: Set<NodeKey>,
  normalizedNodes: Set<NodeKey>,
  tags: Set<string>
): void;
