/**
 * Flowtype definitions for LexicalParagraphNode
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.20.0
 * @flow
 */

import type { EditorConfig, LexicalEditor } from "../LexicalEditor";
import type {
  DOMConversionMap,
  DOMExportOutput,
  LexicalNode,
} from "../LexicalNode";
import type { SerializedElementNode } from "./LexicalElementNode";
import type { Spread } from "lexical";
import { ElementNode } from "./LexicalElementNode";
export type SerializedParagraphNode = Spread<
  {|
    type: "paragraph",
    version: 1,
  |},
  SerializedElementNode
>;
declare export class ParagraphNode mixins ElementNode {
  static getType(): string;
  static clone(node: ParagraphNode): ParagraphNode;
  createDOM(config: EditorConfig): HTMLElement;
  updateDOM(prevNode: ParagraphNode, dom: HTMLElement): boolean;
  static importDOM(): DOMConversionMap | null;
  exportDOM(editor: LexicalEditor): DOMExportOutput;
  static importJSON(serializedNode: SerializedParagraphNode): ParagraphNode;
  exportJSON(): SerializedElementNode;
  insertNewAfter(): ParagraphNode;
  collapseAtStart(): boolean;
}
declare export function $createParagraphNode(): ParagraphNode;
declare export function $isParagraphNode(
  node: LexicalNode | null | void
): boolean;
