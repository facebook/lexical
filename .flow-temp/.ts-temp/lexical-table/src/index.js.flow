/**
 * Flowtype definitions for index
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.20.0
 * @flow
 */

import type { LexicalCommand } from "lexical";
import {
  $createTableCellNode,
  $isTableCellNode,
  TableCellHeaderStates,
  TableCellNode,
} from "./LexicalTableCellNode";
import {
  $createTableNode,
  $getElementGridForTableNode,
  $isTableNode,
  TableNode,
} from "./LexicalTableNode";
import {
  $createTableRowNode,
  $isTableRowNode,
  TableRowNode,
} from "./LexicalTableRowNode";
import { TableSelection } from "./LexicalTableSelection";
import {
  applyTableHandlers,
  getCellFromTarget,
  getTableSelectionFromTableElement,
} from "./LexicalTableSelectionHelpers";
import {
  $createTableNodeWithDimensions,
  $deleteTableColumn,
  $getTableCellNodeFromLexicalNode,
  $getTableColumnIndexFromTableCellNode,
  $getTableNodeFromLexicalNodeOrThrow,
  $getTableRowIndexFromTableCellNode,
  $getTableRowNodeFromTableCellNodeOrThrow,
  $insertTableColumn,
  $insertTableRow,
  $removeTableRowAtIndex,
} from "./LexicalTableUtils";
declare export {
  $createTableCellNode,
  $createTableNode,
  $createTableNodeWithDimensions,
  $createTableRowNode,
  $deleteTableColumn,
  $getElementGridForTableNode,
  $getTableCellNodeFromLexicalNode,
  $getTableColumnIndexFromTableCellNode,
  $getTableNodeFromLexicalNodeOrThrow,
  $getTableRowIndexFromTableCellNode,
  $getTableRowNodeFromTableCellNodeOrThrow,
  $insertTableColumn,
  $insertTableRow,
  $isTableCellNode,
  $isTableNode,
  $isTableRowNode,
  $removeTableRowAtIndex,
  applyTableHandlers,
  getCellFromTarget,
  getTableSelectionFromTableElement,
  TableCellHeaderStates,
  TableCellNode,
  TableNode,
  TableRowNode,
  TableSelection,
};
export type InsertTableCommandPayload = $ReadOnly<{|
  columns: string,
  rows: string,
  includeHeaders?: boolean,
|}>;
declare export var INSERT_TABLE_COMMAND: LexicalCommand<InsertTableCommandPayload>;
