/**
 * Flowtype definitions for LexicalListItemNode
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.20.0
 * @flow
 */

import type {
  DOMConversionMap,
  EditorConfig,
  GridSelection,
  LexicalNode,
  NodeKey,
  NodeSelection,
  ParagraphNode,
  RangeSelection,
  SerializedElementNode,
  Spread,
} from "lexical";
import { ElementNode } from "lexical";
export type SerializedListItemNode = Spread<
  {|
    checked: boolean,
    type: "listitem",
    value: number,
    version: 1,
  |},
  SerializedElementNode
>;
declare export class ListItemNode mixins ElementNode {
  __value: number;
  __checked: boolean;
  static getType(): string;
  static clone(node: ListItemNode): ListItemNode;
  constructor(value?: number, checked?: boolean, key?: NodeKey): this;
  createDOM(config: EditorConfig): HTMLElement;
  updateDOM(
    prevNode: ListItemNode,
    dom: HTMLElement,
    config: EditorConfig
  ): boolean;
  static importDOM(): DOMConversionMap | null;
  static importJSON(serializedNode: SerializedListItemNode): ListItemNode;
  exportJSON(): SerializedListItemNode;
  append(...nodes: LexicalNode[]): this;
  replace<N: LexicalNode>(replaceWithNode: N): N;
  insertAfter(node: LexicalNode): LexicalNode;
  remove(preserveEmptyParent?: boolean): void;
  insertNewAfter(): ListItemNode | ParagraphNode;
  collapseAtStart(selection: RangeSelection): true;
  getValue(): number;
  setValue(value: number): void;
  getChecked(): boolean;
  setChecked(checked: boolean): void;
  toggleChecked(): void;
  getIndent(): number;
  setIndent(indent: number): this;
  canIndent(): false;
  insertBefore(nodeToInsert: LexicalNode): LexicalNode;
  canInsertAfter(node: LexicalNode): boolean;
  canReplaceWith(replacement: LexicalNode): boolean;
  canMergeWith(node: LexicalNode): boolean;
  extractWithChild(
    child: LexicalNode,
    selection: RangeSelection | NodeSelection | GridSelection
  ): boolean;
}
declare export function $createListItemNode(checked?: boolean): ListItemNode;
declare export function $isListItemNode(
  node: LexicalNode | null | void
): boolean;
