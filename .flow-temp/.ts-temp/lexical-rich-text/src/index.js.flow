/**
 * Flowtype definitions for index
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.20.0
 * @flow
 */

import type {
  DOMConversionMap,
  EditorConfig,
  EditorState,
  LexicalEditor,
  LexicalNode,
  NodeKey,
  ParagraphNode,
  SerializedElementNode,
  Spread,
} from "lexical";
import { ElementNode } from "lexical";
export type InitialEditorStateType = null | string | EditorState | (() => void);
export type SerializedHeadingNode = Spread<
  {|
    tag: "h1" | "h2" | "h3" | "h4" | "h5",
    type: "heading",
    version: 1,
  |},
  SerializedElementNode
>;
export type SerializedQuoteNode = Spread<
  {|
    type: "quote",
    version: 1,
  |},
  SerializedElementNode
>;
declare export class QuoteNode mixins ElementNode {
  static getType(): string;
  static clone(node: QuoteNode): QuoteNode;
  constructor(key?: NodeKey): this;
  createDOM(config: EditorConfig): HTMLElement;
  updateDOM(prevNode: QuoteNode, dom: HTMLElement): boolean;
  static importDOM(): DOMConversionMap | null;
  static importJSON(serializedNode: SerializedQuoteNode): QuoteNode;
  exportJSON(): SerializedElementNode;
  insertNewAfter(): ParagraphNode;
  collapseAtStart(): true;
}
declare export function $createQuoteNode(): QuoteNode;
declare export function $isQuoteNode(node: LexicalNode | null | void): boolean;
export type HeadingTagType = "h1" | "h2" | "h3" | "h4" | "h5";
declare export class HeadingNode mixins ElementNode {
  __tag: HeadingTagType;
  static getType(): string;
  static clone(node: HeadingNode): HeadingNode;
  constructor(tag: HeadingTagType, key?: NodeKey): this;
  getTag(): HeadingTagType;
  createDOM(config: EditorConfig): HTMLElement;
  updateDOM(prevNode: HeadingNode, dom: HTMLElement): boolean;
  static importDOM(): DOMConversionMap | null;
  static importJSON(serializedNode: SerializedHeadingNode): HeadingNode;
  exportJSON(): SerializedHeadingNode;
  insertNewAfter(): ParagraphNode;
  collapseAtStart(): true;
  extractWithChild(): boolean;
}
declare export function $createHeadingNode(
  headingTag: HeadingTagType
): HeadingNode;
declare export function $isHeadingNode(
  node: LexicalNode | null | void
): boolean;
declare export function registerRichText(
  editor: LexicalEditor,
  initialEditorState?: InitialEditorStateType
): () => void;
