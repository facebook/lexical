/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow strict
 */
import type {LexicalExtension, ExtensionConfigBase, EditorState, BaseSelection, LexicalEditor} from 'lexical';
import type {NamedSignalsOutput} from '@lexical/extension';

export type HistoryStateEntry = {
  editor: LexicalEditor,
  editorState: EditorState,
  undoSelection?: BaseSelection | null,
};
export type HistoryState = {
  current: null | HistoryStateEntry,
  redoStack: Array<HistoryStateEntry>,
  undoStack: Array<HistoryStateEntry>,
};
declare export function registerHistory(
  editor: LexicalEditor,
  historyState: HistoryState,
  delay: number,
): () => void;
declare export function createEmptyHistoryState(): HistoryState;

export type HistoryConfig = {
  delay: number;
  createInitialHistoryState: (editor: LexicalEditor) => HistoryState;
  disabled: boolean;
}
declare export var HistoryExtension: LexicalExtension<HistoryConfig, "@lexical/history/History", NamedSignalsOutput<{
    delay: number;
    disabled: boolean;
    historyState: HistoryState;
}>, void>;
declare export var SharedHistoryExtension: LexicalExtension<ExtensionConfigBase, "@lexical/history/SharedHistory", void, void>;