{"version":3,"sources":["../../src/utils/registry.ts"],"names":["PACKAGE_PATH","path","join","__dirname","BIN_PATH","EXECUTABLE_PATHS","undefined","DOWNLOAD_URLS","registryDirectory","result","envDefined","cacheDirectory","process","platform","env","XDG_CACHE_HOME","os","homedir","LOCALAPPDATA","Error","isAbsolute","resolve","cwd","isBrowserDirectory","browserDirectory","baseName","basename","browserName","allDownloadable","startsWith","readDescriptors","browsersJSON","map","obj","name","revisionOverride","revisionOverrides","hostPlatform","revision","browserDirectoryPrefix","descriptor","installByDefault","dir","replace","Registry","constructor","_executables","descriptors","findExecutablePath","tokens","executablePathOrDie","e","sdkLanguage","installCommand","buildPlaywrightCLICommand","prettyMessage","chromium","find","d","chromiumExecutable","push","type","directory","executablePath","installType","validateHostRequirements","_validateHostRequirements","_install","_downloadExecutable","_dependencyGroup","chromiumWithSymbols","chromiumWithSymbolsExecutable","_createChromiumChannel","_installChromiumChannel","_installMSEdgeChannel","firefox","firefoxExecutable","firefoxBeta","firefoxBetaExecutable","webkit","webkitExecutable","webkitLinuxLddDirectories","ffmpeg","ffmpegExecutable","Promise","lookAt","install","shouldThrow","suffix","prefixes","PROGRAMFILES","filter","Boolean","prefix","location","length","installation","executables","findExecutable","b","defaultExecutables","_addRequirementsAndDedupe","set","Set","executable","add","Array","from","linuxLddDirectories","dlOpenLibraries","windowsExeAndDllDirectories","stdout","write","ubuntuVersion","arch","installDeps","executablesToInstallDeps","targets","executablesToInstall","fs","promises","mkdir","recursive","lockfilePath","linksDir","releaseLock","lockfile","lock","retries","factor","onCompromised","err","message","writeFile","_validateInstallationCache","code","rmCommand","downloadURLTemplate","downloadHostEnv","downloadHost","downloadURL","util","format","title","downloadFileName","catch","stack","markerFilePath","channel","scripts","scriptArgs","products","JSON","parse","url","productName","product","Product","searchConfig","darwin","artifact","win32","release","Releases","Platform","Architecture","Artifacts","ArtifactName","Location","scriptName","isPowerShell","endsWith","shell","args","stdio","usedBrowserPaths","fileName","readdir","linkPath","linkTarget","readFile","toString","require","usedBrowserPath","browserRevision","parseInt","shouldHaveMarkerFile","unlink","downloadedBrowsers","file","directories","delete","parameters","installDefaultBrowsersForNpmInstall","defaultBrowserNames","registry","installBrowsersForNpmInstall","browsers","findChromiumChannel"],"mappings":"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","sourcesContent":["/**\n * Copyright 2017 Google Inc. All rights reserved.\n * Modifications copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as os from 'os';\nimport path from 'path';\nimport * as util from 'util';\nimport * as fs from 'fs';\nimport lockfile from 'proper-lockfile';\nimport { getUbuntuVersion } from './ubuntuVersion';\nimport { getFromENV, getAsBooleanFromENV, calculateSha1, removeFolders, existsAsync, hostPlatform, canAccessFile, spawnAsync, fetchData, wrapInASCIIBox } from './utils';\nimport { DependencyGroup, installDependenciesLinux, installDependenciesWindows, validateDependenciesLinux, validateDependenciesWindows } from './dependencies';\nimport { downloadBrowserWithProgressBar, logPolitely } from './browserFetcher';\n\nconst PACKAGE_PATH = path.join(__dirname, '..', '..');\nconst BIN_PATH = path.join(__dirname, '..', '..', 'bin');\n\nconst EXECUTABLE_PATHS = {\n  'chromium': {\n    'ubuntu18.04': ['chrome-linux', 'chrome'],\n    'ubuntu20.04': ['chrome-linux', 'chrome'],\n    'ubuntu18.04-arm64': ['chrome-linux', 'chrome'],\n    'ubuntu20.04-arm64': ['chrome-linux', 'chrome'],\n    'mac10.13': ['chrome-mac', 'Chromium.app', 'Contents', 'MacOS', 'Chromium'],\n    'mac10.14': ['chrome-mac', 'Chromium.app', 'Contents', 'MacOS', 'Chromium'],\n    'mac10.15': ['chrome-mac', 'Chromium.app', 'Contents', 'MacOS', 'Chromium'],\n    'mac11': ['chrome-mac', 'Chromium.app', 'Contents', 'MacOS', 'Chromium'],\n    'mac11-arm64': ['chrome-mac', 'Chromium.app', 'Contents', 'MacOS', 'Chromium'],\n    'win64': ['chrome-win', 'chrome.exe'],\n  },\n  'firefox': {\n    'ubuntu18.04': ['firefox', 'firefox'],\n    'ubuntu20.04': ['firefox', 'firefox'],\n    'ubuntu18.04-arm64': undefined,\n    'ubuntu20.04-arm64': undefined,\n    'mac10.13': ['firefox', 'Nightly.app', 'Contents', 'MacOS', 'firefox'],\n    'mac10.14': ['firefox', 'Nightly.app', 'Contents', 'MacOS', 'firefox'],\n    'mac10.15': ['firefox', 'Nightly.app', 'Contents', 'MacOS', 'firefox'],\n    'mac11': ['firefox', 'Nightly.app', 'Contents', 'MacOS', 'firefox'],\n    'mac11-arm64': ['firefox', 'Nightly.app', 'Contents', 'MacOS', 'firefox'],\n    'win64': ['firefox', 'firefox.exe'],\n  },\n  'webkit': {\n    'ubuntu18.04': ['pw_run.sh'],\n    'ubuntu20.04': ['pw_run.sh'],\n    'ubuntu18.04-arm64': undefined,\n    'ubuntu20.04-arm64': undefined,\n    'mac10.13': undefined,\n    'mac10.14': ['pw_run.sh'],\n    'mac10.15': ['pw_run.sh'],\n    'mac11': ['pw_run.sh'],\n    'mac11-arm64': ['pw_run.sh'],\n    'win64': ['Playwright.exe'],\n  },\n  'ffmpeg': {\n    'ubuntu18.04': ['ffmpeg-linux'],\n    'ubuntu20.04': ['ffmpeg-linux'],\n    'ubuntu18.04-arm64': ['ffmpeg-linux-arm64'],\n    'ubuntu20.04-arm64': ['ffmpeg-linux-arm64'],\n    'mac10.13': ['ffmpeg-mac'],\n    'mac10.14': ['ffmpeg-mac'],\n    'mac10.15': ['ffmpeg-mac'],\n    'mac11': ['ffmpeg-mac'],\n    'mac11-arm64': ['ffmpeg-mac'],\n    'win64': ['ffmpeg-win64.exe'],\n  },\n};\n\nconst DOWNLOAD_URLS = {\n  'chromium': {\n    'ubuntu18.04': '%s/builds/chromium/%s/chromium-linux.zip',\n    'ubuntu20.04': '%s/builds/chromium/%s/chromium-linux.zip',\n    'ubuntu18.04-arm64': '%s/builds/chromium/%s/chromium-linux-arm64.zip',\n    'ubuntu20.04-arm64': '%s/builds/chromium/%s/chromium-linux-arm64.zip',\n    'mac10.13': '%s/builds/chromium/%s/chromium-mac.zip',\n    'mac10.14': '%s/builds/chromium/%s/chromium-mac.zip',\n    'mac10.15': '%s/builds/chromium/%s/chromium-mac.zip',\n    'mac11': '%s/builds/chromium/%s/chromium-mac.zip',\n    'mac11-arm64': '%s/builds/chromium/%s/chromium-mac-arm64.zip',\n    'win64': '%s/builds/chromium/%s/chromium-win64.zip',\n  },\n  'chromium-with-symbols': {\n    'ubuntu18.04': '%s/builds/chromium/%s/chromium-with-symbols-linux.zip',\n    'ubuntu20.04': '%s/builds/chromium/%s/chromium-with-symbols-linux.zip',\n    'ubuntu18.04-arm64': '%s/builds/chromium/%s/chromium-with-symbols-linux-arm64.zip',\n    'ubuntu20.04-arm64': '%s/builds/chromium/%s/chromium-with-symbols-linux-arm64.zip',\n    'mac10.13': '%s/builds/chromium/%s/chromium-with-symbols-mac.zip',\n    'mac10.14': '%s/builds/chromium/%s/chromium-with-symbols-mac.zip',\n    'mac10.15': '%s/builds/chromium/%s/chromium-with-symbols-mac.zip',\n    'mac11': '%s/builds/chromium/%s/chromium-with-symbols-mac.zip',\n    'mac11-arm64': '%s/builds/chromium/%s/chromium-with-symbols-mac-arm64.zip',\n    'win64': '%s/builds/chromium/%s/chromium-with-symbols-win64.zip',\n  },\n  'firefox': {\n    'ubuntu18.04': '%s/builds/firefox/%s/firefox-ubuntu-18.04.zip',\n    'ubuntu20.04': '%s/builds/firefox/%s/firefox-ubuntu-20.04.zip',\n    'ubuntu18.04-arm64': undefined,\n    'ubuntu20.04-arm64': undefined,\n    'mac10.13': '%s/builds/firefox/%s/firefox-mac-11.zip',\n    'mac10.14': '%s/builds/firefox/%s/firefox-mac-11.zip',\n    'mac10.15': '%s/builds/firefox/%s/firefox-mac-11.zip',\n    'mac11': '%s/builds/firefox/%s/firefox-mac-11.zip',\n    'mac11-arm64': '%s/builds/firefox/%s/firefox-mac-11-arm64.zip',\n    'win64': '%s/builds/firefox/%s/firefox-win64.zip',\n  },\n  'firefox-beta': {\n    'ubuntu18.04': '%s/builds/firefox-beta/%s/firefox-beta-ubuntu-18.04.zip',\n    'ubuntu20.04': '%s/builds/firefox-beta/%s/firefox-beta-ubuntu-20.04.zip',\n    'ubuntu18.04-arm64': undefined,\n    'ubuntu20.04-arm64': undefined,\n    'mac10.13': '%s/builds/firefox-beta/%s/firefox-beta-mac-11.zip',\n    'mac10.14': '%s/builds/firefox-beta/%s/firefox-beta-mac-11.zip',\n    'mac10.15': '%s/builds/firefox-beta/%s/firefox-beta-mac-11.zip',\n    'mac11': '%s/builds/firefox-beta/%s/firefox-beta-mac-11.zip',\n    'mac11-arm64': '%s/builds/firefox-beta/%s/firefox-beta-mac-11-arm64.zip',\n    'win64': '%s/builds/firefox-beta/%s/firefox-beta-win64.zip',\n  },\n  'webkit': {\n    'ubuntu18.04': '%s/builds/webkit/%s/webkit-ubuntu-18.04.zip',\n    'ubuntu20.04': '%s/builds/webkit/%s/webkit-ubuntu-20.04.zip',\n    'ubuntu18.04-arm64': undefined,\n    'ubuntu20.04-arm64': undefined,\n    'mac10.13': undefined,\n    'mac10.14': '%s/builds/deprecated-webkit-mac-10.14/%s/deprecated-webkit-mac-10.14.zip',\n    'mac10.15': '%s/builds/webkit/%s/webkit-mac-10.15.zip',\n    'mac11': '%s/builds/webkit/%s/webkit-mac-10.15.zip',\n    'mac11-arm64': '%s/builds/webkit/%s/webkit-mac-11-arm64.zip',\n    'win64': '%s/builds/webkit/%s/webkit-win64.zip',\n  },\n  'ffmpeg': {\n    'ubuntu18.04': '%s/builds/ffmpeg/%s/ffmpeg-linux.zip',\n    'ubuntu20.04': '%s/builds/ffmpeg/%s/ffmpeg-linux.zip',\n    'ubuntu18.04-arm64': '%s/builds/ffmpeg/%s/ffmpeg-linux-arm64.zip',\n    'ubuntu20.04-arm64': '%s/builds/ffmpeg/%s/ffmpeg-linux-arm64.zip',\n    'mac10.13': '%s/builds/ffmpeg/%s/ffmpeg-mac.zip',\n    'mac10.14': '%s/builds/ffmpeg/%s/ffmpeg-mac.zip',\n    'mac10.15': '%s/builds/ffmpeg/%s/ffmpeg-mac.zip',\n    'mac11': '%s/builds/ffmpeg/%s/ffmpeg-mac.zip',\n    'mac11-arm64': '%s/builds/ffmpeg/%s/ffmpeg-mac.zip',\n    'win64': '%s/builds/ffmpeg/%s/ffmpeg-win64.zip',\n  },\n};\n\nexport const registryDirectory = (() => {\n  let result: string;\n\n  const envDefined = getFromENV('PLAYWRIGHT_BROWSERS_PATH');\n  if (envDefined === '0') {\n    result = path.join(__dirname, '..', '..', '.local-browsers');\n  } else if (envDefined) {\n    result = envDefined;\n  } else {\n    let cacheDirectory: string;\n    if (process.platform === 'linux')\n      cacheDirectory = process.env.XDG_CACHE_HOME || path.join(os.homedir(), '.cache');\n    else if (process.platform === 'darwin')\n      cacheDirectory = path.join(os.homedir(), 'Library', 'Caches');\n    else if (process.platform === 'win32')\n      cacheDirectory = process.env.LOCALAPPDATA || path.join(os.homedir(), 'AppData', 'Local');\n    else\n      throw new Error('Unsupported platform: ' + process.platform);\n    result = path.join(cacheDirectory, 'ms-playwright');\n  }\n\n  if (!path.isAbsolute(result)) {\n    // It is important to resolve to the absolute path:\n    //   - for unzipping to work correctly;\n    //   - so that registry directory matches between installation and execution.\n    // INIT_CWD points to the root of `npm/yarn install` and is probably what\n    // the user meant when typing the relative path.\n    result = path.resolve(getFromENV('INIT_CWD') || process.cwd(), result);\n  }\n  return result;\n})();\n\nfunction isBrowserDirectory(browserDirectory: string): boolean {\n  const baseName = path.basename(browserDirectory);\n  for (const browserName of allDownloadable) {\n    if (baseName.startsWith(browserName + '-'))\n      return true;\n  }\n  return false;\n}\n\ntype BrowsersJSON = {\n  comment: string\n  browsers: {\n    name: string,\n    revision: string,\n    installByDefault: boolean,\n    revisionOverrides?: {[os: string]: string},\n  }[]\n};\n\ntype BrowsersJSONDescriptor = {\n  name: string,\n  revision: string,\n  installByDefault: boolean,\n  dir: string,\n};\n\nfunction readDescriptors(browsersJSON: BrowsersJSON) {\n  return (browsersJSON['browsers']).map(obj => {\n    const name = obj.name;\n    const revisionOverride = (obj.revisionOverrides || {})[hostPlatform];\n    const revision = revisionOverride || obj.revision;\n    const browserDirectoryPrefix = revisionOverride ? `${name}_${hostPlatform}_special` : `${name}`;\n    const descriptor: BrowsersJSONDescriptor = {\n      name,\n      revision,\n      installByDefault: !!obj.installByDefault,\n      // Method `isBrowserDirectory` determines directory to be browser iff\n      // it starts with some browser name followed by '-'. Some browser names\n      // are prefixes of others, e.g. 'webkit' is a prefix of `webkit-technology-preview`.\n      // To avoid older registries erroneously removing 'webkit-technology-preview', we have to\n      // ensure that browser folders to never include dashes inside.\n      dir: path.join(registryDirectory, browserDirectoryPrefix.replace(/-/g, '_') + '-' + revision),\n    };\n    return descriptor;\n  });\n}\n\nexport type BrowserName = 'chromium' | 'firefox' | 'webkit';\ntype InternalTool = 'ffmpeg' | 'firefox-beta' | 'chromium-with-symbols';\ntype ChromiumChannel = 'chrome' | 'chrome-beta' | 'chrome-dev' | 'chrome-canary' | 'msedge' | 'msedge-beta' | 'msedge-dev' | 'msedge-canary';\nconst allDownloadable = ['chromium', 'firefox', 'webkit', 'ffmpeg', 'firefox-beta', 'chromium-with-symbols'];\n\nexport interface Executable {\n  type: 'browser' | 'tool' | 'channel';\n  name: BrowserName | InternalTool | ChromiumChannel;\n  browserName: BrowserName | undefined;\n  installType: 'download-by-default' | 'download-on-demand' | 'install-script' | 'none';\n  directory: string | undefined;\n  executablePathOrDie(sdkLanguage: string): string;\n  executablePath(sdkLanguage: string): string | undefined;\n  validateHostRequirements(sdkLanguage: string): Promise<void>;\n}\n\ninterface ExecutableImpl extends Executable {\n  _install?: () => Promise<void>;\n  _dependencyGroup?: DependencyGroup;\n}\n\nexport class Registry {\n  private _executables: ExecutableImpl[];\n\n  constructor(browsersJSON: BrowsersJSON) {\n    const descriptors = readDescriptors(browsersJSON);\n    const findExecutablePath = (dir: string, name: keyof typeof EXECUTABLE_PATHS) => {\n      const tokens = EXECUTABLE_PATHS[name][hostPlatform];\n      return tokens ? path.join(dir, ...tokens) : undefined;\n    };\n    const executablePathOrDie = (name: string, e: string | undefined, installByDefault: boolean, sdkLanguage: string) => {\n      if (!e)\n        throw new Error(`${name} is not supported on ${hostPlatform}`);\n      const installCommand = buildPlaywrightCLICommand(sdkLanguage, `install${installByDefault ? '' : ' ' + name}`);\n      if (!canAccessFile(e)) {\n        const prettyMessage = [\n          `Looks like Playwright Test or Playwright was just installed or updated.`,\n          `Please run the following command to download new browser${installByDefault ? 's' : ''}:`,\n          ``,\n          `    ${installCommand}`,\n          ``,\n          `<3 Playwright Team`,\n        ].join('\\n');\n        throw new Error(`Executable doesn't exist at ${e}\\n${wrapInASCIIBox(prettyMessage, 1)}`);\n      }\n      return e;\n    };\n    this._executables = [];\n\n    const chromium = descriptors.find(d => d.name === 'chromium')!;\n    const chromiumExecutable = findExecutablePath(chromium.dir, 'chromium');\n    this._executables.push({\n      type: 'browser',\n      name: 'chromium',\n      browserName: 'chromium',\n      directory: chromium.dir,\n      executablePath: () => chromiumExecutable,\n      executablePathOrDie: (sdkLanguage: string) => executablePathOrDie('chromium', chromiumExecutable, chromium.installByDefault, sdkLanguage),\n      installType: chromium.installByDefault ? 'download-by-default' : 'download-on-demand',\n      validateHostRequirements: (sdkLanguage: string) => this._validateHostRequirements(sdkLanguage, 'chromium', chromium.dir, ['chrome-linux'], [], ['chrome-win']),\n      _install: () => this._downloadExecutable(chromium, chromiumExecutable, DOWNLOAD_URLS['chromium'][hostPlatform], 'PLAYWRIGHT_CHROMIUM_DOWNLOAD_HOST'),\n      _dependencyGroup: 'chromium',\n    });\n\n    const chromiumWithSymbols = descriptors.find(d => d.name === 'chromium-with-symbols')!;\n    const chromiumWithSymbolsExecutable = findExecutablePath(chromiumWithSymbols.dir, 'chromium');\n    this._executables.push({\n      type: 'tool',\n      name: 'chromium-with-symbols',\n      browserName: 'chromium',\n      directory: chromiumWithSymbols.dir,\n      executablePath: () => chromiumWithSymbolsExecutable,\n      executablePathOrDie: (sdkLanguage: string) => executablePathOrDie('chromium-with-symbols', chromiumWithSymbolsExecutable, chromiumWithSymbols.installByDefault, sdkLanguage),\n      installType: chromiumWithSymbols.installByDefault ? 'download-by-default' : 'download-on-demand',\n      validateHostRequirements: (sdkLanguage: string) => this._validateHostRequirements(sdkLanguage, 'chromium', chromiumWithSymbols.dir, ['chrome-linux'], [], ['chrome-win']),\n      _install: () => this._downloadExecutable(chromiumWithSymbols, chromiumWithSymbolsExecutable, DOWNLOAD_URLS['chromium-with-symbols'][hostPlatform], 'PLAYWRIGHT_CHROMIUM_DOWNLOAD_HOST'),\n      _dependencyGroup: 'chromium',\n    });\n\n    this._executables.push(this._createChromiumChannel('chrome', {\n      'linux': '/opt/google/chrome/chrome',\n      'darwin': '/Applications/Google Chrome.app/Contents/MacOS/Google Chrome',\n      'win32': `\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe`,\n    }, () => this._installChromiumChannel('chrome', {\n      'linux': 'reinstall_chrome_stable_linux.sh',\n      'darwin': 'reinstall_chrome_stable_mac.sh',\n      'win32': 'reinstall_chrome_stable_win.ps1',\n    })));\n\n    this._executables.push(this._createChromiumChannel('chrome-beta', {\n      'linux': '/opt/google/chrome-beta/chrome',\n      'darwin': '/Applications/Google Chrome Beta.app/Contents/MacOS/Google Chrome Beta',\n      'win32': `\\\\Google\\\\Chrome Beta\\\\Application\\\\chrome.exe`,\n    }, () => this._installChromiumChannel('chrome-beta', {\n      'linux': 'reinstall_chrome_beta_linux.sh',\n      'darwin': 'reinstall_chrome_beta_mac.sh',\n      'win32': 'reinstall_chrome_beta_win.ps1',\n    })));\n\n    this._executables.push(this._createChromiumChannel('chrome-dev', {\n      'linux': '/opt/google/chrome-unstable/chrome',\n      'darwin': '/Applications/Google Chrome Dev.app/Contents/MacOS/Google Chrome Dev',\n      'win32': `\\\\Google\\\\Chrome Dev\\\\Application\\\\chrome.exe`,\n    }));\n\n    this._executables.push(this._createChromiumChannel('chrome-canary', {\n      'linux': '',\n      'darwin': '/Applications/Google Chrome Canary.app/Contents/MacOS/Google Chrome Canary',\n      'win32': `\\\\Google\\\\Chrome SxS\\\\Application\\\\chrome.exe`,\n    }));\n\n    this._executables.push(this._createChromiumChannel('msedge', {\n      'linux': '/opt/microsoft/msedge/msedge',\n      'darwin': '/Applications/Microsoft Edge.app/Contents/MacOS/Microsoft Edge',\n      'win32': `\\\\Microsoft\\\\Edge\\\\Application\\\\msedge.exe`,\n    }, () => this._installMSEdgeChannel('msedge', {\n      'linux': 'reinstall_msedge_stable_linux.sh',\n      'darwin': 'reinstall_msedge_stable_mac.sh',\n      'win32': 'reinstall_msedge_stable_win.ps1',\n    })));\n\n    this._executables.push(this._createChromiumChannel('msedge-beta', {\n      'linux': '/opt/microsoft/msedge-beta/msedge',\n      'darwin': '/Applications/Microsoft Edge Beta.app/Contents/MacOS/Microsoft Edge Beta',\n      'win32': `\\\\Microsoft\\\\Edge Beta\\\\Application\\\\msedge.exe`,\n    }, () => this._installMSEdgeChannel('msedge-beta', {\n      'darwin': 'reinstall_msedge_beta_mac.sh',\n      'linux': 'reinstall_msedge_beta_linux.sh',\n      'win32': 'reinstall_msedge_beta_win.ps1',\n    })));\n\n    this._executables.push(this._createChromiumChannel('msedge-dev', {\n      'linux': '/opt/microsoft/msedge-dev/msedge',\n      'darwin': '/Applications/Microsoft Edge Dev.app/Contents/MacOS/Microsoft Edge Dev',\n      'win32': `\\\\Microsoft\\\\Edge Dev\\\\Application\\\\msedge.exe`,\n    }, () => this._installMSEdgeChannel('msedge-dev', {\n      'darwin': 'reinstall_msedge_dev_mac.sh',\n      'linux': 'reinstall_msedge_dev_linux.sh',\n      'win32': 'reinstall_msedge_dev_win.ps1',\n    })));\n\n    this._executables.push(this._createChromiumChannel('msedge-canary', {\n      'linux': '',\n      'darwin': '/Applications/Microsoft Edge Canary.app/Contents/MacOS/Microsoft Edge Canary',\n      'win32': `\\\\Microsoft\\\\Edge SxS\\\\Application\\\\msedge.exe`,\n    }));\n\n    const firefox = descriptors.find(d => d.name === 'firefox')!;\n    const firefoxExecutable = findExecutablePath(firefox.dir, 'firefox');\n    this._executables.push({\n      type: 'browser',\n      name: 'firefox',\n      browserName: 'firefox',\n      directory: firefox.dir,\n      executablePath: () => firefoxExecutable,\n      executablePathOrDie: (sdkLanguage: string) => executablePathOrDie('firefox', firefoxExecutable, firefox.installByDefault, sdkLanguage),\n      installType: firefox.installByDefault ? 'download-by-default' : 'download-on-demand',\n      validateHostRequirements: (sdkLanguage: string) => this._validateHostRequirements(sdkLanguage, 'firefox', firefox.dir, ['firefox'], [], ['firefox']),\n      _install: () => this._downloadExecutable(firefox, firefoxExecutable, DOWNLOAD_URLS['firefox'][hostPlatform], 'PLAYWRIGHT_FIREFOX_DOWNLOAD_HOST'),\n      _dependencyGroup: 'firefox',\n    });\n\n    const firefoxBeta = descriptors.find(d => d.name === 'firefox-beta')!;\n    const firefoxBetaExecutable = findExecutablePath(firefoxBeta.dir, 'firefox');\n    this._executables.push({\n      type: 'tool',\n      name: 'firefox-beta',\n      browserName: 'firefox',\n      directory: firefoxBeta.dir,\n      executablePath: () => firefoxBetaExecutable,\n      executablePathOrDie: (sdkLanguage: string) => executablePathOrDie('firefox-beta', firefoxBetaExecutable, firefoxBeta.installByDefault, sdkLanguage),\n      installType: firefoxBeta.installByDefault ? 'download-by-default' : 'download-on-demand',\n      validateHostRequirements: (sdkLanguage: string) => this._validateHostRequirements(sdkLanguage, 'firefox', firefoxBeta.dir, ['firefox'], [], ['firefox']),\n      _install: () => this._downloadExecutable(firefoxBeta, firefoxBetaExecutable, DOWNLOAD_URLS['firefox-beta'][hostPlatform], 'PLAYWRIGHT_FIREFOX_DOWNLOAD_HOST'),\n      _dependencyGroup: 'firefox',\n    });\n\n    const webkit = descriptors.find(d => d.name === 'webkit')!;\n    const webkitExecutable = findExecutablePath(webkit.dir, 'webkit');\n    const webkitLinuxLddDirectories = [\n      path.join('minibrowser-gtk'),\n      path.join('minibrowser-gtk', 'bin'),\n      path.join('minibrowser-gtk', 'lib'),\n      path.join('minibrowser-wpe'),\n      path.join('minibrowser-wpe', 'bin'),\n      path.join('minibrowser-wpe', 'lib'),\n    ];\n    this._executables.push({\n      type: 'browser',\n      name: 'webkit',\n      browserName: 'webkit',\n      directory: webkit.dir,\n      executablePath: () => webkitExecutable,\n      executablePathOrDie: (sdkLanguage: string) => executablePathOrDie('webkit', webkitExecutable, webkit.installByDefault, sdkLanguage),\n      installType: webkit.installByDefault ? 'download-by-default' : 'download-on-demand',\n      validateHostRequirements: (sdkLanguage: string) => this._validateHostRequirements(sdkLanguage, 'webkit', webkit.dir, webkitLinuxLddDirectories, ['libGLESv2.so.2', 'libx264.so'], ['']),\n      _install: () => this._downloadExecutable(webkit, webkitExecutable, DOWNLOAD_URLS['webkit'][hostPlatform], 'PLAYWRIGHT_WEBKIT_DOWNLOAD_HOST'),\n      _dependencyGroup: 'webkit',\n    });\n\n    const ffmpeg = descriptors.find(d => d.name === 'ffmpeg')!;\n    const ffmpegExecutable = findExecutablePath(ffmpeg.dir, 'ffmpeg');\n    this._executables.push({\n      type: 'tool',\n      name: 'ffmpeg',\n      browserName: undefined,\n      directory: ffmpeg.dir,\n      executablePath: () => ffmpegExecutable,\n      executablePathOrDie: (sdkLanguage: string) => executablePathOrDie('ffmpeg', ffmpegExecutable, ffmpeg.installByDefault, sdkLanguage),\n      installType: ffmpeg.installByDefault ? 'download-by-default' : 'download-on-demand',\n      validateHostRequirements: () => Promise.resolve(),\n      _install: () => this._downloadExecutable(ffmpeg, ffmpegExecutable, DOWNLOAD_URLS['ffmpeg'][hostPlatform], 'PLAYWRIGHT_FFMPEG_DOWNLOAD_HOST'),\n      _dependencyGroup: 'tools',\n    });\n  }\n\n  private _createChromiumChannel(name: ChromiumChannel, lookAt: Record<'linux' | 'darwin' | 'win32', string>, install?: () => Promise<void>): ExecutableImpl {\n    const executablePath = (sdkLanguage: string, shouldThrow: boolean) => {\n      const suffix = lookAt[process.platform as 'linux' | 'darwin' | 'win32'];\n      if (!suffix) {\n        if (shouldThrow)\n          throw new Error(`Chromium distribution '${name}' is not supported on ${process.platform}`);\n        return undefined;\n      }\n      const prefixes = (process.platform === 'win32' ? [\n        process.env.LOCALAPPDATA, process.env.PROGRAMFILES, process.env['PROGRAMFILES(X86)']\n      ].filter(Boolean) : ['']) as string[];\n\n      for (const prefix of prefixes) {\n        const executablePath = path.join(prefix, suffix);\n        if (canAccessFile(executablePath))\n          return executablePath;\n      }\n      if (!shouldThrow)\n        return undefined;\n\n      const location = prefixes.length ? ` at ${path.join(prefixes[0], suffix)}` : ``;\n      // TODO: language-specific error message\n      const installation = install ? `\\nRun \"${buildPlaywrightCLICommand(sdkLanguage, 'install ' + name)}\"` : '';\n      throw new Error(`Chromium distribution '${name}' is not found${location}${installation}`);\n    };\n    return {\n      type: 'channel',\n      name,\n      browserName: 'chromium',\n      directory: undefined,\n      executablePath: (sdkLanguage: string) => executablePath(sdkLanguage, false),\n      executablePathOrDie: (sdkLanguage: string) => executablePath(sdkLanguage, true)!,\n      installType: install ? 'install-script' : 'none',\n      validateHostRequirements: () => Promise.resolve(),\n      _install: install,\n    };\n  }\n\n  executables(): Executable[] {\n    return this._executables;\n  }\n\n  findExecutable(name: BrowserName): Executable;\n  findExecutable(name: string): Executable | undefined;\n  findExecutable(name: string): Executable | undefined {\n    return this._executables.find(b => b.name === name);\n  }\n\n  defaultExecutables(): Executable[] {\n    return this._executables.filter(e => e.installType === 'download-by-default');\n  }\n\n  private _addRequirementsAndDedupe(executables: Executable[]): ExecutableImpl[] {\n    const set = new Set<ExecutableImpl>();\n    for (const executable of executables as ExecutableImpl[]) {\n      set.add(executable);\n      if (executable.browserName === 'chromium')\n        set.add(this.findExecutable('ffmpeg')!);\n    }\n    return Array.from(set);\n  }\n\n  private async _validateHostRequirements(sdkLanguage: string, browserName: BrowserName, browserDirectory: string, linuxLddDirectories: string[], dlOpenLibraries: string[], windowsExeAndDllDirectories: string[]) {\n    if (getAsBooleanFromENV('PLAYWRIGHT_SKIP_VALIDATE_HOST_REQUIREMENTS')) {\n      process.stdout.write('Skipping host requirements validation logic because `PLAYWRIGHT_SKIP_VALIDATE_HOST_REQUIREMENTS` env variable is set.\\n');\n      return;\n    }\n    const ubuntuVersion = await getUbuntuVersion();\n    if (browserName === 'firefox' && ubuntuVersion === '16.04')\n      throw new Error(`Cannot launch Firefox on Ubuntu 16.04! Minimum required Ubuntu version for Firefox browser is 18.04`);\n\n    if (os.platform() === 'linux')\n      return await validateDependenciesLinux(sdkLanguage, linuxLddDirectories.map(d => path.join(browserDirectory, d)), dlOpenLibraries);\n    if (os.platform() === 'win32' && os.arch() === 'x64')\n      return await validateDependenciesWindows(windowsExeAndDllDirectories.map(d => path.join(browserDirectory, d)));\n  }\n\n  async installDeps(executablesToInstallDeps: Executable[]) {\n    const executables = this._addRequirementsAndDedupe(executablesToInstallDeps);\n    const targets = new Set<DependencyGroup>();\n    for (const executable of executables) {\n      if (executable._dependencyGroup)\n        targets.add(executable._dependencyGroup);\n    }\n    targets.add('tools');\n    if (os.platform() === 'win32')\n      return await installDependenciesWindows(targets);\n    if (os.platform() === 'linux')\n      return await installDependenciesLinux(targets);\n  }\n\n  async install(executablesToInstall: Executable[]) {\n    const executables = this._addRequirementsAndDedupe(executablesToInstall);\n    await fs.promises.mkdir(registryDirectory, { recursive: true });\n    const lockfilePath = path.join(registryDirectory, '__dirlock');\n    const linksDir = path.join(registryDirectory, '.links');\n\n    let releaseLock;\n    try {\n      releaseLock = await lockfile.lock(registryDirectory, {\n        retries: {\n          retries: 10,\n          // Retry 20 times during 10 minutes with\n          // exponential back-off.\n          // See documentation at: https://www.npmjs.com/package/retry#retrytimeoutsoptions\n          factor: 1.27579,\n        },\n        onCompromised: (err: Error) => {\n          throw new Error(`${err.message} Path: ${lockfilePath}`);\n        },\n        lockfilePath,\n      });\n      // Create a link first, so that cache validation does not remove our own browsers.\n      await fs.promises.mkdir(linksDir, { recursive: true });\n      await fs.promises.writeFile(path.join(linksDir, calculateSha1(PACKAGE_PATH)), PACKAGE_PATH);\n\n      // Remove stale browsers.\n      await this._validateInstallationCache(linksDir);\n\n      // Install browsers for this package.\n      for (const executable of executables) {\n        if (executable._install)\n          await executable._install();\n        else\n          throw new Error(`ERROR: Playwright does not support installing ${executable.name}`);\n      }\n    } catch (e) {\n      if (e.code === 'ELOCKED') {\n        const rmCommand = process.platform === 'win32' ? 'rm -R' : 'rm -rf';\n        throw new Error('\\n' + wrapInASCIIBox([\n          `An active lockfile is found at:`,\n          ``,\n          `  ${lockfilePath}`,\n          ``,\n          `Either:`,\n          `- wait a few minutes if other Playwright is installing browsers in parallel`,\n          `- remove lock manually with:`,\n          ``,\n          `    ${rmCommand} ${lockfilePath}`,\n          ``,\n          `<3 Playwright Team`,\n        ].join('\\n'), 1));\n      } else {\n        throw e;\n      }\n    } finally {\n      if (releaseLock)\n        await releaseLock();\n    }\n  }\n\n  private async _downloadExecutable(descriptor: BrowsersJSONDescriptor, executablePath: string | undefined, downloadURLTemplate: string | undefined, downloadHostEnv: string) {\n    if (!downloadURLTemplate || !executablePath)\n      throw new Error(`ERROR: Playwright does not support ${descriptor.name} on ${hostPlatform}`);\n    const downloadHost =\n        (downloadHostEnv && getFromENV(downloadHostEnv)) ||\n        getFromENV('PLAYWRIGHT_DOWNLOAD_HOST') ||\n        'https://playwright.azureedge.net';\n    const downloadURL = util.format(downloadURLTemplate, downloadHost, descriptor.revision);\n    const title = `${descriptor.name} v${descriptor.revision}`;\n    const downloadFileName = `playwright-download-${descriptor.name}-${hostPlatform}-${descriptor.revision}.zip`;\n    await downloadBrowserWithProgressBar(title, descriptor.dir, executablePath, downloadURL, downloadFileName).catch(e => {\n      throw new Error(`Failed to download ${title}, caused by\\n${e.stack}`);\n    });\n    await fs.promises.writeFile(markerFilePath(descriptor.dir), '');\n  }\n\n  private async _installMSEdgeChannel(channel: 'msedge'|'msedge-beta'|'msedge-dev', scripts: Record<'linux' | 'darwin' | 'win32', string>) {\n    const scriptArgs: string[] = [];\n    if (process.platform !== 'linux') {\n      const products = JSON.parse(await fetchData({ url: 'https://edgeupdates.microsoft.com/api/products' }));\n      const productName = {\n        'msedge': 'Stable',\n        'msedge-beta': 'Beta',\n        'msedge-dev': 'Dev',\n      }[channel];\n      const product = products.find((product: any) => product.Product === productName);\n      const searchConfig = ({\n        darwin: { platform: 'MacOS', arch: 'universal', artifact: 'pkg' },\n        win32: { platform: 'Windows', arch: 'x64', artifact: 'msi' },\n      } as any)[process.platform];\n      const release = searchConfig ? product.Releases.find((release: any) => release.Platform === searchConfig.platform && release.Architecture === searchConfig.arch) : null;\n      const artifact = release ? release.Artifacts.find((artifact: any) => artifact.ArtifactName === searchConfig.artifact) : null;\n      if (artifact)\n        scriptArgs.push(artifact.Location /* url */);\n      else\n        throw new Error(`Cannot install ${channel} on ${process.platform}`);\n    }\n    await this._installChromiumChannel(channel, scripts, scriptArgs);\n  }\n\n  private async _installChromiumChannel(channel: string, scripts: Record<'linux' | 'darwin' | 'win32', string>, scriptArgs: string[] = []) {\n    const scriptName = scripts[process.platform as 'linux' | 'darwin' | 'win32'];\n    if (!scriptName)\n      throw new Error(`Cannot install ${channel} on ${process.platform}`);\n    const isPowerShell = scriptName.endsWith('.ps1');\n    const shell = isPowerShell ? 'powershell.exe' : 'bash';\n    const args = [\n      ...(isPowerShell ? ['-ExecutionPolicy', 'Bypass', '-File'] : []),\n      path.join(BIN_PATH, scriptName),\n      ...scriptArgs\n    ];\n    const { code } = await spawnAsync(shell, args, { cwd: BIN_PATH, stdio: 'inherit' });\n    if (code !== 0)\n      throw new Error(`Failed to install ${channel}`);\n  }\n\n  private async _validateInstallationCache(linksDir: string) {\n    // 1. Collect used downloads and package descriptors.\n    const usedBrowserPaths: Set<string> = new Set();\n    for (const fileName of await fs.promises.readdir(linksDir)) {\n      const linkPath = path.join(linksDir, fileName);\n      let linkTarget = '';\n      try {\n        linkTarget = (await fs.promises.readFile(linkPath)).toString();\n        const browsersJSON = require(path.join(linkTarget, 'browsers.json'));\n        const descriptors = readDescriptors(browsersJSON);\n        for (const browserName of allDownloadable) {\n          // We retain browsers if they are found in the descriptor.\n          // Note, however, that there are older versions out in the wild that rely on\n          // the \"download\" field in the browser descriptor and use its value\n          // to retain and download browsers.\n          // As of v1.10, we decided to abandon \"download\" field.\n          const descriptor = descriptors.find(d => d.name === browserName);\n          if (!descriptor)\n            continue;\n          const usedBrowserPath = descriptor.dir;\n          const browserRevision = parseInt(descriptor.revision, 10);\n          // Old browser installations don't have marker file.\n          const shouldHaveMarkerFile = (browserName === 'chromium' && browserRevision >= 786218) ||\n              (browserName === 'firefox' && browserRevision >= 1128) ||\n              (browserName === 'webkit' && browserRevision >= 1307) ||\n              // All new applications have a marker file right away.\n              (browserName !== 'firefox' && browserName !== 'chromium' && browserName !== 'webkit');\n          if (!shouldHaveMarkerFile || (await existsAsync(markerFilePath(usedBrowserPath))))\n            usedBrowserPaths.add(usedBrowserPath);\n        }\n      } catch (e) {\n        await fs.promises.unlink(linkPath).catch(e => {});\n      }\n    }\n\n    // 2. Delete all unused browsers.\n    if (!getAsBooleanFromENV('PLAYWRIGHT_SKIP_BROWSER_GC')) {\n      let downloadedBrowsers = (await fs.promises.readdir(registryDirectory)).map(file => path.join(registryDirectory, file));\n      downloadedBrowsers = downloadedBrowsers.filter(file => isBrowserDirectory(file));\n      const directories = new Set<string>(downloadedBrowsers);\n      for (const browserDirectory of usedBrowserPaths)\n        directories.delete(browserDirectory);\n      for (const directory of directories)\n        logPolitely('Removing unused browser at ' + directory);\n      await removeFolders([...directories]);\n    }\n  }\n}\n\nfunction markerFilePath(browserDirectory: string): string {\n  return path.join(browserDirectory, 'INSTALLATION_COMPLETE');\n}\n\nexport function buildPlaywrightCLICommand(sdkLanguage: string, parameters: string): string {\n  switch (sdkLanguage) {\n    case 'python':\n      return `playwright ${parameters}`;\n    case 'java':\n      return `mvn exec:java -e -Dexec.mainClass=com.microsoft.playwright.CLI -Dexec.args=\"${parameters}\"`;\n    case 'csharp':\n      return `playwright ${parameters}`;\n    default:\n      return `npx playwright ${parameters}`;\n  }\n}\n\nexport async function installDefaultBrowsersForNpmInstall() {\n  const defaultBrowserNames = registry.defaultExecutables().map(e => e.name);\n  return installBrowsersForNpmInstall(defaultBrowserNames);\n}\n\nexport async function installBrowsersForNpmInstall(browsers: string[]) {\n  // PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD should have a value of 0 or 1\n  if (getAsBooleanFromENV('PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD')) {\n    logPolitely('Skipping browsers download because `PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD` env variable is set');\n    return false;\n  }\n  const executables: Executable[] = [];\n  for (const browserName of browsers) {\n    const executable = registry.findExecutable(browserName);\n    if (!executable || executable.installType === 'none')\n      throw new Error(`Cannot install ${browserName}`);\n    executables.push(executable);\n  }\n\n  await registry.install(executables);\n}\n\nexport function findChromiumChannel(sdkLanguage: string): string | undefined {\n  // Fall back to the stable channels of popular vendors to work out of the box.\n  // Null means no installation and no channels found.\n  let channel = null;\n  for (const name of ['chromium', 'chrome', 'msedge']) {\n    try {\n      registry.findExecutable(name)!.executablePathOrDie(sdkLanguage);\n      channel = name === 'chromium' ? undefined : name;\n      break;\n    } catch (e) {\n    }\n  }\n\n  if (channel === null) {\n    const installCommand = buildPlaywrightCLICommand(sdkLanguage, `install chromium`);\n    const prettyMessage = [\n      `No chromium-based browser found on the system.`,\n      `Please run the following command to download one:`,\n      ``,\n      `    ${installCommand}`,\n      ``,\n      `<3 Playwright Team`,\n    ].join('\\n');\n    throw new Error('\\n' + wrapInASCIIBox(prettyMessage, 1));\n  }\n  return channel;\n}\n\nexport const registry = new Registry(require('../../browsers.json'));\n"],"file":"registry.js"}