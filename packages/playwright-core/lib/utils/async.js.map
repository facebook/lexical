{"version":3,"sources":["../../src/utils/async.ts"],"names":["DeadlineRunner","constructor","promise","deadline","_timer","result","ManualPromise","then","_finish","catch","e","undefined","updateDeadline","success","error","isDone","resolve","reject","interrupt","clearTimeout","timeout","timedOut","setTimeout","raceAgainstDeadline","Symbol","species","toStringTag","Promise","f","r","_resolve","_reject","_isDone","t"],"mappings":";;;;;;;;AAgBA;;;;AAEO,MAAMA,cAAN,CAAwB;AAI7BC,EAAAA,WAAW,CAACC,OAAD,EAAsBC,QAAtB,EAAwC;AAAA,SAH3CC,MAG2C;AAAA,SAF1CC,MAE0C,GAFjC,IAAIC,aAAJ,EAEiC;AACjDJ,IAAAA,OAAO,CAACK,IAAR,CAAaF,MAAM,IAAI;AACrB,WAAKG,OAAL,CAAa;AAAEH,QAAAA;AAAF,OAAb;AACD,KAFD,EAEGI,KAFH,CAESC,CAAC,IAAI;AACZ,WAAKF,OAAL,CAAaG,SAAb,EAAwBD,CAAxB;AACD,KAJD;AAKA,SAAKE,cAAL,CAAoBT,QAApB;AACD;;AAEOK,EAAAA,OAAO,CAACK,OAAD,EAA+CC,KAA/C,EAA4D;AACzE,QAAI,KAAKT,MAAL,CAAYU,MAAZ,EAAJ,EACE;AACF,SAAKH,cAAL,CAAoB,CAApB;AACA,QAAIC,OAAJ,EACE,KAAKR,MAAL,CAAYW,OAAZ,CAAoBH,OAApB,EADF,KAGE,KAAKR,MAAL,CAAYY,MAAZ,CAAmBH,KAAnB;AACH;;AAEDI,EAAAA,SAAS,GAAG;AACV,SAAKN,cAAL,CAAoB,CAAC,CAArB;AACD;;AAEDA,EAAAA,cAAc,CAACT,QAAD,EAAmB;AAC/B,QAAI,KAAKC,MAAT,EAAiB;AACfe,MAAAA,YAAY,CAAC,KAAKf,MAAN,CAAZ;AACA,WAAKA,MAAL,GAAcO,SAAd;AACD;;AACD,QAAIR,QAAQ,KAAK,CAAjB,EACE;AACF,UAAMiB,OAAO,GAAGjB,QAAQ,GAAG,2BAA3B;AACA,QAAIiB,OAAO,IAAI,CAAf,EACE,KAAKZ,OAAL,CAAa;AAAEa,MAAAA,QAAQ,EAAE;AAAZ,KAAb,EADF,KAGE,KAAKjB,MAAL,GAAckB,UAAU,CAAC,MAAM,KAAKd,OAAL,CAAa;AAAEa,MAAAA,QAAQ,EAAE;AAAZ,KAAb,CAAP,EAAyCD,OAAzC,CAAxB;AACH;;AAvC4B;;;;AA0CxB,eAAeG,mBAAf,CAAsCrB,OAAtC,EAA2DC,QAA3D,EAA0H;AAC/H,SAAQ,IAAIH,cAAJ,CAAmBE,OAAnB,EAA4BC,QAA5B,CAAD,CAAwCE,MAA/C;AACD;;kBAiCsBmB,MAAM,CAACC,O;sBAIdD,MAAM,CAACE,W;;AAnChB,MAAMpB,aAAN,SAA+BqB,OAA/B,CAA0C;AAK/C1B,EAAAA,WAAW,GAAG;AACZ,QAAIe,OAAJ;AACA,QAAIC,MAAJ;AACA,UAAM,CAACW,CAAD,EAAIC,CAAJ,KAAU;AACdb,MAAAA,OAAO,GAAGY,CAAV;AACAX,MAAAA,MAAM,GAAGY,CAAT;AACD,KAHD;AAHY,SAJNC,QAIM;AAAA,SAHNC,OAGM;AAAA,SAFNC,OAEM;AAOZ,SAAKA,OAAL,GAAe,KAAf;AACA,SAAKF,QAAL,GAAgBd,OAAhB;AACA,SAAKe,OAAL,GAAed,MAAf;AACD;;AAEDF,EAAAA,MAAM,GAAG;AACP,WAAO,KAAKiB,OAAZ;AACD;;AAEDhB,EAAAA,OAAO,CAACiB,CAAD,EAAO;AACZ,SAAKD,OAAL,GAAe,IAAf;;AACA,SAAKF,QAAL,CAAcG,CAAd;AACD;;AAEDhB,EAAAA,MAAM,CAACP,CAAD,EAAW;AACf,SAAKsB,OAAL,GAAe,IAAf;;AACA,SAAKD,OAAL,CAAarB,CAAb;AACD;;AAED,iCAAuC;AACrC,WAAOiB,OAAP;AACD;;AAED,8BAAoC;AAClC,WAAO,eAAP;AACD;;AArC8C","sourcesContent":["/**\n * Copyright (c) Microsoft Corporation.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { monotonicTime } from './utils';\n\nexport class DeadlineRunner<T> {\n  private _timer: NodeJS.Timer | undefined;\n  readonly result = new ManualPromise<{ result?: T, timedOut?: boolean }>();\n\n  constructor(promise: Promise<T>, deadline: number) {\n    promise.then(result => {\n      this._finish({ result });\n    }).catch(e => {\n      this._finish(undefined, e);\n    });\n    this.updateDeadline(deadline);\n  }\n\n  private _finish(success?: { result?: T, timedOut?: boolean }, error?: any) {\n    if (this.result.isDone())\n      return;\n    this.updateDeadline(0);\n    if (success)\n      this.result.resolve(success);\n    else\n      this.result.reject(error);\n  }\n\n  interrupt() {\n    this.updateDeadline(-1);\n  }\n\n  updateDeadline(deadline: number) {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = undefined;\n    }\n    if (deadline === 0)\n      return;\n    const timeout = deadline - monotonicTime();\n    if (timeout <= 0)\n      this._finish({ timedOut: true });\n    else\n      this._timer = setTimeout(() => this._finish({ timedOut: true }), timeout);\n  }\n}\n\nexport async function raceAgainstDeadline<T>(promise: Promise<T>, deadline: number): Promise<{ result?: T, timedOut?: boolean }> {\n  return (new DeadlineRunner(promise, deadline)).result;\n}\n\nexport class ManualPromise<T> extends Promise<T> {\n  private _resolve!: (t: T) => void;\n  private _reject!: (e: Error) => void;\n  private _isDone: boolean;\n\n  constructor() {\n    let resolve: (t: T) => void;\n    let reject: (e: Error) => void;\n    super((f, r) => {\n      resolve = f;\n      reject = r;\n    });\n    this._isDone = false;\n    this._resolve = resolve!;\n    this._reject = reject!;\n  }\n\n  isDone() {\n    return this._isDone;\n  }\n\n  resolve(t: T) {\n    this._isDone = true;\n    this._resolve(t);\n  }\n\n  reject(e: Error) {\n    this._isDone = true;\n    this._reject(e);\n  }\n\n  static override get [Symbol.species]() {\n    return Promise;\n  }\n\n  override get [Symbol.toStringTag]() {\n    return 'ManualPromise';\n  }\n}\n"],"file":"async.js"}