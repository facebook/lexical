/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow strict
 */

import type {
  EditorConfig,
  EditorThemeClasses,
  LexicalNode,
  NodeKey,
} from 'lexical';

import {TextNode} from 'lexical';

declare export class CodeHighlightNode extends TextNode {
  __highlightType: ?string;
  constructor(text: string, highlightType?: string, key?: NodeKey): void;
  static getType(): string;
  static clone(node: CodeHighlightNode): CodeHighlightNode;
  createDOM<EditorContext>(config: EditorConfig<EditorContext>): HTMLElement;
  updateDOM<EditorContext>(
    // $FlowFixMe
    prevNode: CodeHighlightNode,
    dom: HTMLElement,
    config: EditorConfig<EditorContext>,
  ): boolean;
  setFormat(format: number): this;
}
declare function getHighlightThemeClass(
  theme: EditorThemeClasses,
  highlightType: ?string,
): ?string;
declare export function $createCodeHighlightNode(
  text: string,
  highlightType?: string,
): CodeHighlightNode;
declare export function $isCodeHighlightNode(
  node: ?LexicalNode,
): boolean %checks(node instanceof CodeHighlightNode);
