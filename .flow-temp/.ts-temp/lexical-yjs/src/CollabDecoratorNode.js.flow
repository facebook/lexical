/**
 * Flowtype definitions for CollabDecoratorNode
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.20.0
 * @flow
 */

import type { Binding } from ".";
import type { CollabElementNode } from "./CollabElementNode";
import type { DecoratorNode, NodeKey, NodeMap } from "lexical";
import type { XmlElement } from "yjs";
declare export class CollabDecoratorNode {
  _xmlElem: XmlElement;
  _key: NodeKey;
  _parent: CollabElementNode;
  _type: string;
  _unobservers: Set<() => void>;
  constructor(
    xmlElem: XmlElement,
    parent: CollabElementNode,
    type: string
  ): this;
  getPrevNode(nodeMap: null | NodeMap): null | DecoratorNode<mixed>;
  getNode(): null | DecoratorNode<mixed>;
  getSharedType(): XmlElement;
  getType(): string;
  getKey(): NodeKey;
  getSize(): number;
  getOffset(): number;
  syncPropertiesFromLexical(
    binding: Binding,
    nextLexicalNode: DecoratorNode<mixed>,
    prevNodeMap: null | NodeMap
  ): void;
  syncPropertiesFromYjs(
    binding: Binding,
    keysChanged: null | Set<string>
  ): void;
  destroy(binding: Binding): void;
}
declare export function $createCollabDecoratorNode(
  xmlElem: XmlElement,
  parent: CollabElementNode,
  type: string
): CollabDecoratorNode;
