/**
 * Flowtype definitions for LexicalConstants
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.20.0
 * @flow
 */

import type { ElementFormatType } from "./nodes/LexicalElementNode";
import type { TextFormatType, TextModeType } from "./nodes/LexicalTextNode";
declare export var DOM_ELEMENT_TYPE: 1;
declare export var DOM_TEXT_TYPE: 3;
declare export var NO_DIRTY_NODES: 0;
declare export var HAS_DIRTY_NODES: 1;
declare export var FULL_RECONCILE: 2;
declare export var IS_NORMAL: 0;
declare export var IS_TOKEN: 1;
declare export var IS_SEGMENTED: 2;
declare export var IS_INERT: 3;
declare export var IS_BOLD: 1;
declare export var IS_ITALIC: number;
declare export var IS_STRIKETHROUGH: number;
declare export var IS_UNDERLINE: number;
declare export var IS_CODE: number;
declare export var IS_SUBSCRIPT: number;
declare export var IS_SUPERSCRIPT: number;
declare export var IS_DIRECTIONLESS: 1;
declare export var IS_UNMERGEABLE: number;
declare export var IS_ALIGN_LEFT: 1;
declare export var IS_ALIGN_CENTER: 2;
declare export var IS_ALIGN_RIGHT: 3;
declare export var IS_ALIGN_JUSTIFY: 4;
declare export var NON_BREAKING_SPACE: "Â ";
declare export var COMPOSITION_SUFFIX: string;
declare export var DOUBLE_LINE_BREAK: "\n\n";
declare export var COMPOSITION_START_CHAR: string;
declare export var RTL_REGEX: RegExp;
declare export var LTR_REGEX: RegExp;
declare export var TEXT_TYPE_TO_FORMAT: { [key: TextFormatType]: number };
declare export var ELEMENT_TYPE_TO_FORMAT: $Diff<
  { [key: ElementFormatType]: number },
  { "": any }
>;
declare export var ELEMENT_FORMAT_TO_TYPE: { [key: number]: ElementFormatType };
declare export var TEXT_MODE_TO_TYPE: { [key: TextModeType]: 0 | 1 | 2 | 3 };
declare export var TEXT_TYPE_TO_MODE: { [key: number]: TextModeType };
