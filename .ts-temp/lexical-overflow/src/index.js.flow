/**
 * Flowtype definitions for index
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.20.0
 * @flow
 */

import type {
  EditorConfig,
  LexicalNode,
  NodeKey,
  RangeSelection,
  SerializedElementNode,
  Spread,
} from "lexical";
import { ElementNode } from "lexical";
export type SerializedOverflowNode = Spread<
  {
    type: "overflow",
    version: 1,
    ...
  },
  SerializedElementNode
>;
declare export class OverflowNode mixins ElementNode {
  static getType(): string;
  static clone(node: OverflowNode): OverflowNode;
  static importJSON(serializedNode: SerializedOverflowNode): OverflowNode;
  static importDOM(): null;
  constructor(key?: NodeKey): this;
  exportJSON(): SerializedElementNode;
  createDOM(config: EditorConfig): HTMLElement;
  updateDOM(prevNode: OverflowNode, dom: HTMLElement): boolean;
  insertNewAfter(selection: RangeSelection): null | LexicalNode;
  excludeFromCopy(): boolean;
}
declare export function $createOverflowNode(): OverflowNode;
declare export function $isOverflowNode(
  node: LexicalNode | null | void
): boolean;
